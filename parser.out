Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ABSOLUTE
    AMPERSANTMOD
    AND
    APOSTROPHE
    ASM
    CASE
    CONST
    CONSTRUCTOR
    DESTRUCTOR
    DIV
    DIVIDE
    DOWNTO
    EXTERNAL
    FILE
    FORWARD
    FUNCTION
    GOTO
    IMPLEMENTATION
    IN
    INLINE
    INTERFACE
    INTERRUPT
    LABEL
    LBLOCK
    MINUS
    NIL
    NOT
    OBJECT
    OR
    PACKED
    PLUS
    POINTER
    PRIVATE
    PROCEDURE
    RBLOCK
    RECORD
    REPEAT
    SET
    SHL
    SHR
    TIMES
    UNIT
    UNTIL
    VIRTUAL
    WITH
    XOR

Grammar

Rule 0     S' -> program
Rule 1     program -> PROGRAM ID SEMICOLON declaration_list block
Rule 2     declaration_list -> VAR declaration_var
Rule 3     declaration_var -> declaration_id COLON type_specifier SEMICOLON declaration_var
Rule 4     declaration_var -> declaration_id COLON type_specifier SEMICOLON
Rule 5     declaration_var -> declaration_list
Rule 6     declaration_list -> TYPE declaration_type
Rule 7     declaration_type -> declaration_id EQUAL type_specifier SEMICOLON declaration_type
Rule 8     declaration_type -> declaration_id EQUAL type_specifier SEMICOLON
Rule 9     declaration_type -> declaration_list
Rule 10    declaration_list -> USES declaration_uses
Rule 11    declaration_uses -> declaration_id SEMICOLON declaration_uses
Rule 12    declaration_uses -> declaration_id SEMICOLON
Rule 13    declaration_uses -> declaration_list
Rule 14    declaration_id -> ID COMMA declaration_id
Rule 15    declaration_id -> ID
Rule 16    type_specifier -> REAL
Rule 17    type_specifier -> CHAR
Rule 18    type_specifier -> BOOLEAN
Rule 19    type_specifier -> STRING
Rule 20    type_specifier -> ID
Rule 21    type_specifier -> ARRAY LBRACKET NUMBER SUBRANGE NUMBER RBRACKET OF type_specifier
Rule 22    block -> BEGIN instance END DOT
Rule 23    instance -> group_instance instance
Rule 24    instance -> group_instance
Rule 25    group_instance -> declaration_id SEMICOLON
Rule 26    group_instance -> asignation SEMICOLON
Rule 27    group_instance -> iteration_for
Rule 28    group_instance -> iteration_while
Rule 29    group_instance -> selection_if
Rule 30    group_instance -> read_statement
Rule 31    group_instance -> write_statement
Rule 32    asignation -> ID ASSIGNATION expression
Rule 33    expression -> ID
Rule 34    expression -> NUMBER
Rule 35    expression -> ID LBRACKET ID RBRACKET
Rule 36    expression -> ID LBRACKET NUMBER RBRACKET
Rule 37    iteration_for -> FOR expression TO expression DO BEGIN instance END SEMICOLON
Rule 38    iteration_for -> FOR asignation TO expression DO BEGIN instance END SEMICOLON
Rule 39    iteration_while -> WHILE LPAREN expression_comparison RPAREN DO BEGIN instance END SEMICOLON
Rule 40    expression_comparison -> expression comparison expression
Rule 41    comparison -> EQUAL
Rule 42    comparison -> LESS
Rule 43    comparison -> LESSEQUAL
Rule 44    comparison -> GREATER
Rule 45    comparison -> GREATEREQUAL
Rule 46    comparison -> DEQUAL
Rule 47    selection_if -> IF LPAREN expression_comparison RPAREN THEN BEGIN instance END SEMICOLON
Rule 48    selection_if -> IF LPAREN expression_comparison RPAREN THEN instance
Rule 49    selection_if -> IF LPAREN expression_comparison RPAREN THEN BEGIN instance END SEMICOLON ELSE instance
Rule 50    selection_if -> IF LPAREN expression_comparison RPAREN THEN instance ELSE instance
Rule 51    selection_if -> IF LPAREN expression_comparison RPAREN THEN BEGIN instance END SEMICOLON ELSE BEGIN instance END SEMICOLON
Rule 52    selection_if -> IF LPAREN expression_comparison RPAREN THEN instance ELSE BEGIN instance END SEMICOLON
Rule 53    read_statement -> READ LPAREN expression RPAREN SEMICOLON
Rule 54    read_statement -> READLN LPAREN expression RPAREN SEMICOLON
Rule 55    write_statement -> WRITE LPAREN type_out RPAREN SEMICOLON
Rule 56    write_statement -> WRITELN LPAREN type_out RPAREN SEMICOLON
Rule 57    type_out -> ID
Rule 58    type_out -> ID COMMA type_out
Rule 59    type_out -> TEXT
Rule 60    type_out -> TEXT COMMA type_out
Rule 61    type_out -> ID LBRACKET ID RBRACKET
Rule 62    type_out -> ID LBRACKET ID RBRACKET COMMA type_out

Terminals, with rules where they appear

ABSOLUTE             : 
AMPERSANTMOD         : 
AND                  : 
APOSTROPHE           : 
ARRAY                : 21
ASM                  : 
ASSIGNATION          : 32
BEGIN                : 22 37 38 39 47 49 51 51 52
BOOLEAN              : 18
CASE                 : 
CHAR                 : 17
COLON                : 3 4
COMMA                : 14 58 60 62
CONST                : 
CONSTRUCTOR          : 
DEQUAL               : 46
DESTRUCTOR           : 
DIV                  : 
DIVIDE               : 
DO                   : 37 38 39
DOT                  : 22
DOWNTO               : 
ELSE                 : 49 50 51 52
END                  : 22 37 38 39 47 49 51 51 52
EQUAL                : 7 8 41
EXTERNAL             : 
FILE                 : 
FOR                  : 37 38
FORWARD              : 
FUNCTION             : 
GOTO                 : 
GREATER              : 44
GREATEREQUAL         : 45
ID                   : 1 14 15 20 32 33 35 35 36 57 58 61 61 62 62
IF                   : 47 48 49 50 51 52
IMPLEMENTATION       : 
IN                   : 
INLINE               : 
INTERFACE            : 
INTERRUPT            : 
LABEL                : 
LBLOCK               : 
LBRACKET             : 21 35 36 61 62
LESS                 : 42
LESSEQUAL            : 43
LPAREN               : 39 47 48 49 50 51 52 53 54 55 56
MINUS                : 
NIL                  : 
NOT                  : 
NUMBER               : 21 21 34 36
OBJECT               : 
OF                   : 21
OR                   : 
PACKED               : 
PLUS                 : 
POINTER              : 
PRIVATE              : 
PROCEDURE            : 
PROGRAM              : 1
RBLOCK               : 
RBRACKET             : 21 35 36 61 62
READ                 : 53
READLN               : 54
REAL                 : 16
RECORD               : 
REPEAT               : 
RPAREN               : 39 47 48 49 50 51 52 53 54 55 56
SEMICOLON            : 1 3 4 7 8 11 12 25 26 37 38 39 47 49 51 51 52 53 54 55 56
SET                  : 
SHL                  : 
SHR                  : 
STRING               : 19
SUBRANGE             : 21
TEXT                 : 59 60
THEN                 : 47 48 49 50 51 52
TIMES                : 
TO                   : 37 38
TYPE                 : 6
UNIT                 : 
UNTIL                : 
USES                 : 10
VAR                  : 2
VIRTUAL              : 
WHILE                : 39
WITH                 : 
WRITE                : 55
WRITELN              : 56
XOR                  : 
error                : 

Nonterminals, with rules where they appear

asignation           : 26 38
block                : 1
comparison           : 40
declaration_id       : 3 4 7 8 11 12 14 25
declaration_list     : 1 5 9 13
declaration_type     : 6 7
declaration_uses     : 10 11
declaration_var      : 2 3
expression           : 32 37 37 38 40 40 53 54
expression_comparison : 39 47 48 49 50 51 52
group_instance       : 23 24
instance             : 22 23 37 38 39 47 48 49 49 50 50 51 51 52 52
iteration_for        : 27
iteration_while      : 28
program              : 0
read_statement       : 30
selection_if         : 29
type_out             : 55 56 58 60 62
type_specifier       : 3 4 7 8 21
write_statement      : 31

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . PROGRAM ID SEMICOLON declaration_list block

    PROGRAM         shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> PROGRAM . ID SEMICOLON declaration_list block

    ID              shift and go to state 3


state 3

    (1) program -> PROGRAM ID . SEMICOLON declaration_list block

    SEMICOLON       shift and go to state 4


state 4

    (1) program -> PROGRAM ID SEMICOLON . declaration_list block
    (2) declaration_list -> . VAR declaration_var
    (6) declaration_list -> . TYPE declaration_type
    (10) declaration_list -> . USES declaration_uses

    VAR             shift and go to state 6
    TYPE            shift and go to state 7
    USES            shift and go to state 8

    declaration_list               shift and go to state 5

state 5

    (1) program -> PROGRAM ID SEMICOLON declaration_list . block
    (22) block -> . BEGIN instance END DOT

    BEGIN           shift and go to state 10

    block                          shift and go to state 9

state 6

    (2) declaration_list -> VAR . declaration_var
    (3) declaration_var -> . declaration_id COLON type_specifier SEMICOLON declaration_var
    (4) declaration_var -> . declaration_id COLON type_specifier SEMICOLON
    (5) declaration_var -> . declaration_list
    (14) declaration_id -> . ID COMMA declaration_id
    (15) declaration_id -> . ID
    (2) declaration_list -> . VAR declaration_var
    (6) declaration_list -> . TYPE declaration_type
    (10) declaration_list -> . USES declaration_uses

    ID              shift and go to state 14
    VAR             shift and go to state 6
    TYPE            shift and go to state 7
    USES            shift and go to state 8

    declaration_var                shift and go to state 11
    declaration_id                 shift and go to state 12
    declaration_list               shift and go to state 13

state 7

    (6) declaration_list -> TYPE . declaration_type
    (7) declaration_type -> . declaration_id EQUAL type_specifier SEMICOLON declaration_type
    (8) declaration_type -> . declaration_id EQUAL type_specifier SEMICOLON
    (9) declaration_type -> . declaration_list
    (14) declaration_id -> . ID COMMA declaration_id
    (15) declaration_id -> . ID
    (2) declaration_list -> . VAR declaration_var
    (6) declaration_list -> . TYPE declaration_type
    (10) declaration_list -> . USES declaration_uses

    ID              shift and go to state 14
    VAR             shift and go to state 6
    TYPE            shift and go to state 7
    USES            shift and go to state 8

    declaration_type               shift and go to state 15
    declaration_id                 shift and go to state 16
    declaration_list               shift and go to state 17

state 8

    (10) declaration_list -> USES . declaration_uses
    (11) declaration_uses -> . declaration_id SEMICOLON declaration_uses
    (12) declaration_uses -> . declaration_id SEMICOLON
    (13) declaration_uses -> . declaration_list
    (14) declaration_id -> . ID COMMA declaration_id
    (15) declaration_id -> . ID
    (2) declaration_list -> . VAR declaration_var
    (6) declaration_list -> . TYPE declaration_type
    (10) declaration_list -> . USES declaration_uses

    ID              shift and go to state 14
    VAR             shift and go to state 6
    TYPE            shift and go to state 7
    USES            shift and go to state 8

    declaration_uses               shift and go to state 18
    declaration_id                 shift and go to state 19
    declaration_list               shift and go to state 20

state 9

    (1) program -> PROGRAM ID SEMICOLON declaration_list block .

    $end            reduce using rule 1 (program -> PROGRAM ID SEMICOLON declaration_list block .)


state 10

    (22) block -> BEGIN . instance END DOT
    (23) instance -> . group_instance instance
    (24) instance -> . group_instance
    (25) group_instance -> . declaration_id SEMICOLON
    (26) group_instance -> . asignation SEMICOLON
    (27) group_instance -> . iteration_for
    (28) group_instance -> . iteration_while
    (29) group_instance -> . selection_if
    (30) group_instance -> . read_statement
    (31) group_instance -> . write_statement
    (14) declaration_id -> . ID COMMA declaration_id
    (15) declaration_id -> . ID
    (32) asignation -> . ID ASSIGNATION expression
    (37) iteration_for -> . FOR expression TO expression DO BEGIN instance END SEMICOLON
    (38) iteration_for -> . FOR asignation TO expression DO BEGIN instance END SEMICOLON
    (39) iteration_while -> . WHILE LPAREN expression_comparison RPAREN DO BEGIN instance END SEMICOLON
    (47) selection_if -> . IF LPAREN expression_comparison RPAREN THEN BEGIN instance END SEMICOLON
    (48) selection_if -> . IF LPAREN expression_comparison RPAREN THEN instance
    (49) selection_if -> . IF LPAREN expression_comparison RPAREN THEN BEGIN instance END SEMICOLON ELSE instance
    (50) selection_if -> . IF LPAREN expression_comparison RPAREN THEN instance ELSE instance
    (51) selection_if -> . IF LPAREN expression_comparison RPAREN THEN BEGIN instance END SEMICOLON ELSE BEGIN instance END SEMICOLON
    (52) selection_if -> . IF LPAREN expression_comparison RPAREN THEN instance ELSE BEGIN instance END SEMICOLON
    (53) read_statement -> . READ LPAREN expression RPAREN SEMICOLON
    (54) read_statement -> . READLN LPAREN expression RPAREN SEMICOLON
    (55) write_statement -> . WRITE LPAREN type_out RPAREN SEMICOLON
    (56) write_statement -> . WRITELN LPAREN type_out RPAREN SEMICOLON

    ID              shift and go to state 30
    FOR             shift and go to state 31
    WHILE           shift and go to state 32
    IF              shift and go to state 33
    READ            shift and go to state 34
    READLN          shift and go to state 35
    WRITE           shift and go to state 36
    WRITELN         shift and go to state 37

    instance                       shift and go to state 21
    group_instance                 shift and go to state 22
    declaration_id                 shift and go to state 23
    asignation                     shift and go to state 24
    iteration_for                  shift and go to state 25
    iteration_while                shift and go to state 26
    selection_if                   shift and go to state 27
    read_statement                 shift and go to state 28
    write_statement                shift and go to state 29

state 11

    (2) declaration_list -> VAR declaration_var .

    BEGIN           reduce using rule 2 (declaration_list -> VAR declaration_var .)


state 12

    (3) declaration_var -> declaration_id . COLON type_specifier SEMICOLON declaration_var
    (4) declaration_var -> declaration_id . COLON type_specifier SEMICOLON

    COLON           shift and go to state 38


state 13

    (5) declaration_var -> declaration_list .

    BEGIN           reduce using rule 5 (declaration_var -> declaration_list .)


state 14

    (14) declaration_id -> ID . COMMA declaration_id
    (15) declaration_id -> ID .

    COMMA           shift and go to state 39
    COLON           reduce using rule 15 (declaration_id -> ID .)
    EQUAL           reduce using rule 15 (declaration_id -> ID .)
    SEMICOLON       reduce using rule 15 (declaration_id -> ID .)


state 15

    (6) declaration_list -> TYPE declaration_type .

    BEGIN           reduce using rule 6 (declaration_list -> TYPE declaration_type .)


state 16

    (7) declaration_type -> declaration_id . EQUAL type_specifier SEMICOLON declaration_type
    (8) declaration_type -> declaration_id . EQUAL type_specifier SEMICOLON

    EQUAL           shift and go to state 40


state 17

    (9) declaration_type -> declaration_list .

    BEGIN           reduce using rule 9 (declaration_type -> declaration_list .)


state 18

    (10) declaration_list -> USES declaration_uses .

    BEGIN           reduce using rule 10 (declaration_list -> USES declaration_uses .)


state 19

    (11) declaration_uses -> declaration_id . SEMICOLON declaration_uses
    (12) declaration_uses -> declaration_id . SEMICOLON

    SEMICOLON       shift and go to state 41


state 20

    (13) declaration_uses -> declaration_list .

    BEGIN           reduce using rule 13 (declaration_uses -> declaration_list .)


state 21

    (22) block -> BEGIN instance . END DOT

    END             shift and go to state 42


state 22

    (23) instance -> group_instance . instance
    (24) instance -> group_instance .
    (23) instance -> . group_instance instance
    (24) instance -> . group_instance
    (25) group_instance -> . declaration_id SEMICOLON
    (26) group_instance -> . asignation SEMICOLON
    (27) group_instance -> . iteration_for
    (28) group_instance -> . iteration_while
    (29) group_instance -> . selection_if
    (30) group_instance -> . read_statement
    (31) group_instance -> . write_statement
    (14) declaration_id -> . ID COMMA declaration_id
    (15) declaration_id -> . ID
    (32) asignation -> . ID ASSIGNATION expression
    (37) iteration_for -> . FOR expression TO expression DO BEGIN instance END SEMICOLON
    (38) iteration_for -> . FOR asignation TO expression DO BEGIN instance END SEMICOLON
    (39) iteration_while -> . WHILE LPAREN expression_comparison RPAREN DO BEGIN instance END SEMICOLON
    (47) selection_if -> . IF LPAREN expression_comparison RPAREN THEN BEGIN instance END SEMICOLON
    (48) selection_if -> . IF LPAREN expression_comparison RPAREN THEN instance
    (49) selection_if -> . IF LPAREN expression_comparison RPAREN THEN BEGIN instance END SEMICOLON ELSE instance
    (50) selection_if -> . IF LPAREN expression_comparison RPAREN THEN instance ELSE instance
    (51) selection_if -> . IF LPAREN expression_comparison RPAREN THEN BEGIN instance END SEMICOLON ELSE BEGIN instance END SEMICOLON
    (52) selection_if -> . IF LPAREN expression_comparison RPAREN THEN instance ELSE BEGIN instance END SEMICOLON
    (53) read_statement -> . READ LPAREN expression RPAREN SEMICOLON
    (54) read_statement -> . READLN LPAREN expression RPAREN SEMICOLON
    (55) write_statement -> . WRITE LPAREN type_out RPAREN SEMICOLON
    (56) write_statement -> . WRITELN LPAREN type_out RPAREN SEMICOLON

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for READLN resolved as shift
  ! shift/reduce conflict for WRITE resolved as shift
  ! shift/reduce conflict for WRITELN resolved as shift
    END             reduce using rule 24 (instance -> group_instance .)
    ELSE            reduce using rule 24 (instance -> group_instance .)
    ID              shift and go to state 30
    FOR             shift and go to state 31
    WHILE           shift and go to state 32
    IF              shift and go to state 33
    READ            shift and go to state 34
    READLN          shift and go to state 35
    WRITE           shift and go to state 36
    WRITELN         shift and go to state 37

  ! ID              [ reduce using rule 24 (instance -> group_instance .) ]
  ! FOR             [ reduce using rule 24 (instance -> group_instance .) ]
  ! WHILE           [ reduce using rule 24 (instance -> group_instance .) ]
  ! IF              [ reduce using rule 24 (instance -> group_instance .) ]
  ! READ            [ reduce using rule 24 (instance -> group_instance .) ]
  ! READLN          [ reduce using rule 24 (instance -> group_instance .) ]
  ! WRITE           [ reduce using rule 24 (instance -> group_instance .) ]
  ! WRITELN         [ reduce using rule 24 (instance -> group_instance .) ]

    group_instance                 shift and go to state 22
    instance                       shift and go to state 43
    declaration_id                 shift and go to state 23
    asignation                     shift and go to state 24
    iteration_for                  shift and go to state 25
    iteration_while                shift and go to state 26
    selection_if                   shift and go to state 27
    read_statement                 shift and go to state 28
    write_statement                shift and go to state 29

state 23

    (25) group_instance -> declaration_id . SEMICOLON

    SEMICOLON       shift and go to state 44


state 24

    (26) group_instance -> asignation . SEMICOLON

    SEMICOLON       shift and go to state 45


state 25

    (27) group_instance -> iteration_for .

    ID              reduce using rule 27 (group_instance -> iteration_for .)
    FOR             reduce using rule 27 (group_instance -> iteration_for .)
    WHILE           reduce using rule 27 (group_instance -> iteration_for .)
    IF              reduce using rule 27 (group_instance -> iteration_for .)
    READ            reduce using rule 27 (group_instance -> iteration_for .)
    READLN          reduce using rule 27 (group_instance -> iteration_for .)
    WRITE           reduce using rule 27 (group_instance -> iteration_for .)
    WRITELN         reduce using rule 27 (group_instance -> iteration_for .)
    END             reduce using rule 27 (group_instance -> iteration_for .)
    ELSE            reduce using rule 27 (group_instance -> iteration_for .)


state 26

    (28) group_instance -> iteration_while .

    ID              reduce using rule 28 (group_instance -> iteration_while .)
    FOR             reduce using rule 28 (group_instance -> iteration_while .)
    WHILE           reduce using rule 28 (group_instance -> iteration_while .)
    IF              reduce using rule 28 (group_instance -> iteration_while .)
    READ            reduce using rule 28 (group_instance -> iteration_while .)
    READLN          reduce using rule 28 (group_instance -> iteration_while .)
    WRITE           reduce using rule 28 (group_instance -> iteration_while .)
    WRITELN         reduce using rule 28 (group_instance -> iteration_while .)
    END             reduce using rule 28 (group_instance -> iteration_while .)
    ELSE            reduce using rule 28 (group_instance -> iteration_while .)


state 27

    (29) group_instance -> selection_if .

    ID              reduce using rule 29 (group_instance -> selection_if .)
    FOR             reduce using rule 29 (group_instance -> selection_if .)
    WHILE           reduce using rule 29 (group_instance -> selection_if .)
    IF              reduce using rule 29 (group_instance -> selection_if .)
    READ            reduce using rule 29 (group_instance -> selection_if .)
    READLN          reduce using rule 29 (group_instance -> selection_if .)
    WRITE           reduce using rule 29 (group_instance -> selection_if .)
    WRITELN         reduce using rule 29 (group_instance -> selection_if .)
    END             reduce using rule 29 (group_instance -> selection_if .)
    ELSE            reduce using rule 29 (group_instance -> selection_if .)


state 28

    (30) group_instance -> read_statement .

    ID              reduce using rule 30 (group_instance -> read_statement .)
    FOR             reduce using rule 30 (group_instance -> read_statement .)
    WHILE           reduce using rule 30 (group_instance -> read_statement .)
    IF              reduce using rule 30 (group_instance -> read_statement .)
    READ            reduce using rule 30 (group_instance -> read_statement .)
    READLN          reduce using rule 30 (group_instance -> read_statement .)
    WRITE           reduce using rule 30 (group_instance -> read_statement .)
    WRITELN         reduce using rule 30 (group_instance -> read_statement .)
    END             reduce using rule 30 (group_instance -> read_statement .)
    ELSE            reduce using rule 30 (group_instance -> read_statement .)


state 29

    (31) group_instance -> write_statement .

    ID              reduce using rule 31 (group_instance -> write_statement .)
    FOR             reduce using rule 31 (group_instance -> write_statement .)
    WHILE           reduce using rule 31 (group_instance -> write_statement .)
    IF              reduce using rule 31 (group_instance -> write_statement .)
    READ            reduce using rule 31 (group_instance -> write_statement .)
    READLN          reduce using rule 31 (group_instance -> write_statement .)
    WRITE           reduce using rule 31 (group_instance -> write_statement .)
    WRITELN         reduce using rule 31 (group_instance -> write_statement .)
    END             reduce using rule 31 (group_instance -> write_statement .)
    ELSE            reduce using rule 31 (group_instance -> write_statement .)


state 30

    (14) declaration_id -> ID . COMMA declaration_id
    (15) declaration_id -> ID .
    (32) asignation -> ID . ASSIGNATION expression

    COMMA           shift and go to state 39
    SEMICOLON       reduce using rule 15 (declaration_id -> ID .)
    ASSIGNATION     shift and go to state 46


state 31

    (37) iteration_for -> FOR . expression TO expression DO BEGIN instance END SEMICOLON
    (38) iteration_for -> FOR . asignation TO expression DO BEGIN instance END SEMICOLON
    (33) expression -> . ID
    (34) expression -> . NUMBER
    (35) expression -> . ID LBRACKET ID RBRACKET
    (36) expression -> . ID LBRACKET NUMBER RBRACKET
    (32) asignation -> . ID ASSIGNATION expression

    ID              shift and go to state 49
    NUMBER          shift and go to state 50

    expression                     shift and go to state 47
    asignation                     shift and go to state 48

state 32

    (39) iteration_while -> WHILE . LPAREN expression_comparison RPAREN DO BEGIN instance END SEMICOLON

    LPAREN          shift and go to state 51


state 33

    (47) selection_if -> IF . LPAREN expression_comparison RPAREN THEN BEGIN instance END SEMICOLON
    (48) selection_if -> IF . LPAREN expression_comparison RPAREN THEN instance
    (49) selection_if -> IF . LPAREN expression_comparison RPAREN THEN BEGIN instance END SEMICOLON ELSE instance
    (50) selection_if -> IF . LPAREN expression_comparison RPAREN THEN instance ELSE instance
    (51) selection_if -> IF . LPAREN expression_comparison RPAREN THEN BEGIN instance END SEMICOLON ELSE BEGIN instance END SEMICOLON
    (52) selection_if -> IF . LPAREN expression_comparison RPAREN THEN instance ELSE BEGIN instance END SEMICOLON

    LPAREN          shift and go to state 52


state 34

    (53) read_statement -> READ . LPAREN expression RPAREN SEMICOLON

    LPAREN          shift and go to state 53


state 35

    (54) read_statement -> READLN . LPAREN expression RPAREN SEMICOLON

    LPAREN          shift and go to state 54


state 36

    (55) write_statement -> WRITE . LPAREN type_out RPAREN SEMICOLON

    LPAREN          shift and go to state 55


state 37

    (56) write_statement -> WRITELN . LPAREN type_out RPAREN SEMICOLON

    LPAREN          shift and go to state 56


state 38

    (3) declaration_var -> declaration_id COLON . type_specifier SEMICOLON declaration_var
    (4) declaration_var -> declaration_id COLON . type_specifier SEMICOLON
    (16) type_specifier -> . REAL
    (17) type_specifier -> . CHAR
    (18) type_specifier -> . BOOLEAN
    (19) type_specifier -> . STRING
    (20) type_specifier -> . ID
    (21) type_specifier -> . ARRAY LBRACKET NUMBER SUBRANGE NUMBER RBRACKET OF type_specifier

    REAL            shift and go to state 58
    CHAR            shift and go to state 59
    BOOLEAN         shift and go to state 60
    STRING          shift and go to state 61
    ID              shift and go to state 62
    ARRAY           shift and go to state 63

    type_specifier                 shift and go to state 57

state 39

    (14) declaration_id -> ID COMMA . declaration_id
    (14) declaration_id -> . ID COMMA declaration_id
    (15) declaration_id -> . ID

    ID              shift and go to state 14

    declaration_id                 shift and go to state 64

state 40

    (7) declaration_type -> declaration_id EQUAL . type_specifier SEMICOLON declaration_type
    (8) declaration_type -> declaration_id EQUAL . type_specifier SEMICOLON
    (16) type_specifier -> . REAL
    (17) type_specifier -> . CHAR
    (18) type_specifier -> . BOOLEAN
    (19) type_specifier -> . STRING
    (20) type_specifier -> . ID
    (21) type_specifier -> . ARRAY LBRACKET NUMBER SUBRANGE NUMBER RBRACKET OF type_specifier

    REAL            shift and go to state 58
    CHAR            shift and go to state 59
    BOOLEAN         shift and go to state 60
    STRING          shift and go to state 61
    ID              shift and go to state 62
    ARRAY           shift and go to state 63

    type_specifier                 shift and go to state 65

state 41

    (11) declaration_uses -> declaration_id SEMICOLON . declaration_uses
    (12) declaration_uses -> declaration_id SEMICOLON .
    (11) declaration_uses -> . declaration_id SEMICOLON declaration_uses
    (12) declaration_uses -> . declaration_id SEMICOLON
    (13) declaration_uses -> . declaration_list
    (14) declaration_id -> . ID COMMA declaration_id
    (15) declaration_id -> . ID
    (2) declaration_list -> . VAR declaration_var
    (6) declaration_list -> . TYPE declaration_type
    (10) declaration_list -> . USES declaration_uses

    BEGIN           reduce using rule 12 (declaration_uses -> declaration_id SEMICOLON .)
    ID              shift and go to state 14
    VAR             shift and go to state 6
    TYPE            shift and go to state 7
    USES            shift and go to state 8

    declaration_id                 shift and go to state 19
    declaration_uses               shift and go to state 66
    declaration_list               shift and go to state 20

state 42

    (22) block -> BEGIN instance END . DOT

    DOT             shift and go to state 67


state 43

    (23) instance -> group_instance instance .

    END             reduce using rule 23 (instance -> group_instance instance .)
    ELSE            reduce using rule 23 (instance -> group_instance instance .)
    ID              reduce using rule 23 (instance -> group_instance instance .)
    FOR             reduce using rule 23 (instance -> group_instance instance .)
    WHILE           reduce using rule 23 (instance -> group_instance instance .)
    IF              reduce using rule 23 (instance -> group_instance instance .)
    READ            reduce using rule 23 (instance -> group_instance instance .)
    READLN          reduce using rule 23 (instance -> group_instance instance .)
    WRITE           reduce using rule 23 (instance -> group_instance instance .)
    WRITELN         reduce using rule 23 (instance -> group_instance instance .)


state 44

    (25) group_instance -> declaration_id SEMICOLON .

    ID              reduce using rule 25 (group_instance -> declaration_id SEMICOLON .)
    FOR             reduce using rule 25 (group_instance -> declaration_id SEMICOLON .)
    WHILE           reduce using rule 25 (group_instance -> declaration_id SEMICOLON .)
    IF              reduce using rule 25 (group_instance -> declaration_id SEMICOLON .)
    READ            reduce using rule 25 (group_instance -> declaration_id SEMICOLON .)
    READLN          reduce using rule 25 (group_instance -> declaration_id SEMICOLON .)
    WRITE           reduce using rule 25 (group_instance -> declaration_id SEMICOLON .)
    WRITELN         reduce using rule 25 (group_instance -> declaration_id SEMICOLON .)
    END             reduce using rule 25 (group_instance -> declaration_id SEMICOLON .)
    ELSE            reduce using rule 25 (group_instance -> declaration_id SEMICOLON .)


state 45

    (26) group_instance -> asignation SEMICOLON .

    ID              reduce using rule 26 (group_instance -> asignation SEMICOLON .)
    FOR             reduce using rule 26 (group_instance -> asignation SEMICOLON .)
    WHILE           reduce using rule 26 (group_instance -> asignation SEMICOLON .)
    IF              reduce using rule 26 (group_instance -> asignation SEMICOLON .)
    READ            reduce using rule 26 (group_instance -> asignation SEMICOLON .)
    READLN          reduce using rule 26 (group_instance -> asignation SEMICOLON .)
    WRITE           reduce using rule 26 (group_instance -> asignation SEMICOLON .)
    WRITELN         reduce using rule 26 (group_instance -> asignation SEMICOLON .)
    END             reduce using rule 26 (group_instance -> asignation SEMICOLON .)
    ELSE            reduce using rule 26 (group_instance -> asignation SEMICOLON .)


state 46

    (32) asignation -> ID ASSIGNATION . expression
    (33) expression -> . ID
    (34) expression -> . NUMBER
    (35) expression -> . ID LBRACKET ID RBRACKET
    (36) expression -> . ID LBRACKET NUMBER RBRACKET

    ID              shift and go to state 68
    NUMBER          shift and go to state 50

    expression                     shift and go to state 69

state 47

    (37) iteration_for -> FOR expression . TO expression DO BEGIN instance END SEMICOLON

    TO              shift and go to state 70


state 48

    (38) iteration_for -> FOR asignation . TO expression DO BEGIN instance END SEMICOLON

    TO              shift and go to state 71


state 49

    (33) expression -> ID .
    (35) expression -> ID . LBRACKET ID RBRACKET
    (36) expression -> ID . LBRACKET NUMBER RBRACKET
    (32) asignation -> ID . ASSIGNATION expression

    TO              reduce using rule 33 (expression -> ID .)
    LBRACKET        shift and go to state 72
    ASSIGNATION     shift and go to state 46


state 50

    (34) expression -> NUMBER .

    TO              reduce using rule 34 (expression -> NUMBER .)
    SEMICOLON       reduce using rule 34 (expression -> NUMBER .)
    EQUAL           reduce using rule 34 (expression -> NUMBER .)
    LESS            reduce using rule 34 (expression -> NUMBER .)
    LESSEQUAL       reduce using rule 34 (expression -> NUMBER .)
    GREATER         reduce using rule 34 (expression -> NUMBER .)
    GREATEREQUAL    reduce using rule 34 (expression -> NUMBER .)
    DEQUAL          reduce using rule 34 (expression -> NUMBER .)
    RPAREN          reduce using rule 34 (expression -> NUMBER .)
    DO              reduce using rule 34 (expression -> NUMBER .)


state 51

    (39) iteration_while -> WHILE LPAREN . expression_comparison RPAREN DO BEGIN instance END SEMICOLON
    (40) expression_comparison -> . expression comparison expression
    (33) expression -> . ID
    (34) expression -> . NUMBER
    (35) expression -> . ID LBRACKET ID RBRACKET
    (36) expression -> . ID LBRACKET NUMBER RBRACKET

    ID              shift and go to state 68
    NUMBER          shift and go to state 50

    expression_comparison          shift and go to state 73
    expression                     shift and go to state 74

state 52

    (47) selection_if -> IF LPAREN . expression_comparison RPAREN THEN BEGIN instance END SEMICOLON
    (48) selection_if -> IF LPAREN . expression_comparison RPAREN THEN instance
    (49) selection_if -> IF LPAREN . expression_comparison RPAREN THEN BEGIN instance END SEMICOLON ELSE instance
    (50) selection_if -> IF LPAREN . expression_comparison RPAREN THEN instance ELSE instance
    (51) selection_if -> IF LPAREN . expression_comparison RPAREN THEN BEGIN instance END SEMICOLON ELSE BEGIN instance END SEMICOLON
    (52) selection_if -> IF LPAREN . expression_comparison RPAREN THEN instance ELSE BEGIN instance END SEMICOLON
    (40) expression_comparison -> . expression comparison expression
    (33) expression -> . ID
    (34) expression -> . NUMBER
    (35) expression -> . ID LBRACKET ID RBRACKET
    (36) expression -> . ID LBRACKET NUMBER RBRACKET

    ID              shift and go to state 68
    NUMBER          shift and go to state 50

    expression_comparison          shift and go to state 75
    expression                     shift and go to state 74

state 53

    (53) read_statement -> READ LPAREN . expression RPAREN SEMICOLON
    (33) expression -> . ID
    (34) expression -> . NUMBER
    (35) expression -> . ID LBRACKET ID RBRACKET
    (36) expression -> . ID LBRACKET NUMBER RBRACKET

    ID              shift and go to state 68
    NUMBER          shift and go to state 50

    expression                     shift and go to state 76

state 54

    (54) read_statement -> READLN LPAREN . expression RPAREN SEMICOLON
    (33) expression -> . ID
    (34) expression -> . NUMBER
    (35) expression -> . ID LBRACKET ID RBRACKET
    (36) expression -> . ID LBRACKET NUMBER RBRACKET

    ID              shift and go to state 68
    NUMBER          shift and go to state 50

    expression                     shift and go to state 77

state 55

    (55) write_statement -> WRITE LPAREN . type_out RPAREN SEMICOLON
    (57) type_out -> . ID
    (58) type_out -> . ID COMMA type_out
    (59) type_out -> . TEXT
    (60) type_out -> . TEXT COMMA type_out
    (61) type_out -> . ID LBRACKET ID RBRACKET
    (62) type_out -> . ID LBRACKET ID RBRACKET COMMA type_out

    ID              shift and go to state 79
    TEXT            shift and go to state 80

    type_out                       shift and go to state 78

state 56

    (56) write_statement -> WRITELN LPAREN . type_out RPAREN SEMICOLON
    (57) type_out -> . ID
    (58) type_out -> . ID COMMA type_out
    (59) type_out -> . TEXT
    (60) type_out -> . TEXT COMMA type_out
    (61) type_out -> . ID LBRACKET ID RBRACKET
    (62) type_out -> . ID LBRACKET ID RBRACKET COMMA type_out

    ID              shift and go to state 79
    TEXT            shift and go to state 80

    type_out                       shift and go to state 81

state 57

    (3) declaration_var -> declaration_id COLON type_specifier . SEMICOLON declaration_var
    (4) declaration_var -> declaration_id COLON type_specifier . SEMICOLON

    SEMICOLON       shift and go to state 82


state 58

    (16) type_specifier -> REAL .

    SEMICOLON       reduce using rule 16 (type_specifier -> REAL .)


state 59

    (17) type_specifier -> CHAR .

    SEMICOLON       reduce using rule 17 (type_specifier -> CHAR .)


state 60

    (18) type_specifier -> BOOLEAN .

    SEMICOLON       reduce using rule 18 (type_specifier -> BOOLEAN .)


state 61

    (19) type_specifier -> STRING .

    SEMICOLON       reduce using rule 19 (type_specifier -> STRING .)


state 62

    (20) type_specifier -> ID .

    SEMICOLON       reduce using rule 20 (type_specifier -> ID .)


state 63

    (21) type_specifier -> ARRAY . LBRACKET NUMBER SUBRANGE NUMBER RBRACKET OF type_specifier

    LBRACKET        shift and go to state 83


state 64

    (14) declaration_id -> ID COMMA declaration_id .

    COLON           reduce using rule 14 (declaration_id -> ID COMMA declaration_id .)
    EQUAL           reduce using rule 14 (declaration_id -> ID COMMA declaration_id .)
    SEMICOLON       reduce using rule 14 (declaration_id -> ID COMMA declaration_id .)


state 65

    (7) declaration_type -> declaration_id EQUAL type_specifier . SEMICOLON declaration_type
    (8) declaration_type -> declaration_id EQUAL type_specifier . SEMICOLON

    SEMICOLON       shift and go to state 84


state 66

    (11) declaration_uses -> declaration_id SEMICOLON declaration_uses .

    BEGIN           reduce using rule 11 (declaration_uses -> declaration_id SEMICOLON declaration_uses .)


state 67

    (22) block -> BEGIN instance END DOT .

    $end            reduce using rule 22 (block -> BEGIN instance END DOT .)


state 68

    (33) expression -> ID .
    (35) expression -> ID . LBRACKET ID RBRACKET
    (36) expression -> ID . LBRACKET NUMBER RBRACKET

    SEMICOLON       reduce using rule 33 (expression -> ID .)
    TO              reduce using rule 33 (expression -> ID .)
    EQUAL           reduce using rule 33 (expression -> ID .)
    LESS            reduce using rule 33 (expression -> ID .)
    LESSEQUAL       reduce using rule 33 (expression -> ID .)
    GREATER         reduce using rule 33 (expression -> ID .)
    GREATEREQUAL    reduce using rule 33 (expression -> ID .)
    DEQUAL          reduce using rule 33 (expression -> ID .)
    RPAREN          reduce using rule 33 (expression -> ID .)
    DO              reduce using rule 33 (expression -> ID .)
    LBRACKET        shift and go to state 72


state 69

    (32) asignation -> ID ASSIGNATION expression .

    SEMICOLON       reduce using rule 32 (asignation -> ID ASSIGNATION expression .)
    TO              reduce using rule 32 (asignation -> ID ASSIGNATION expression .)


state 70

    (37) iteration_for -> FOR expression TO . expression DO BEGIN instance END SEMICOLON
    (33) expression -> . ID
    (34) expression -> . NUMBER
    (35) expression -> . ID LBRACKET ID RBRACKET
    (36) expression -> . ID LBRACKET NUMBER RBRACKET

    ID              shift and go to state 68
    NUMBER          shift and go to state 50

    expression                     shift and go to state 85

state 71

    (38) iteration_for -> FOR asignation TO . expression DO BEGIN instance END SEMICOLON
    (33) expression -> . ID
    (34) expression -> . NUMBER
    (35) expression -> . ID LBRACKET ID RBRACKET
    (36) expression -> . ID LBRACKET NUMBER RBRACKET

    ID              shift and go to state 68
    NUMBER          shift and go to state 50

    expression                     shift and go to state 86

state 72

    (35) expression -> ID LBRACKET . ID RBRACKET
    (36) expression -> ID LBRACKET . NUMBER RBRACKET

    ID              shift and go to state 87
    NUMBER          shift and go to state 88


state 73

    (39) iteration_while -> WHILE LPAREN expression_comparison . RPAREN DO BEGIN instance END SEMICOLON

    RPAREN          shift and go to state 89


state 74

    (40) expression_comparison -> expression . comparison expression
    (41) comparison -> . EQUAL
    (42) comparison -> . LESS
    (43) comparison -> . LESSEQUAL
    (44) comparison -> . GREATER
    (45) comparison -> . GREATEREQUAL
    (46) comparison -> . DEQUAL

    EQUAL           shift and go to state 91
    LESS            shift and go to state 92
    LESSEQUAL       shift and go to state 93
    GREATER         shift and go to state 94
    GREATEREQUAL    shift and go to state 95
    DEQUAL          shift and go to state 96

    comparison                     shift and go to state 90

state 75

    (47) selection_if -> IF LPAREN expression_comparison . RPAREN THEN BEGIN instance END SEMICOLON
    (48) selection_if -> IF LPAREN expression_comparison . RPAREN THEN instance
    (49) selection_if -> IF LPAREN expression_comparison . RPAREN THEN BEGIN instance END SEMICOLON ELSE instance
    (50) selection_if -> IF LPAREN expression_comparison . RPAREN THEN instance ELSE instance
    (51) selection_if -> IF LPAREN expression_comparison . RPAREN THEN BEGIN instance END SEMICOLON ELSE BEGIN instance END SEMICOLON
    (52) selection_if -> IF LPAREN expression_comparison . RPAREN THEN instance ELSE BEGIN instance END SEMICOLON

    RPAREN          shift and go to state 97


state 76

    (53) read_statement -> READ LPAREN expression . RPAREN SEMICOLON

    RPAREN          shift and go to state 98


state 77

    (54) read_statement -> READLN LPAREN expression . RPAREN SEMICOLON

    RPAREN          shift and go to state 99


state 78

    (55) write_statement -> WRITE LPAREN type_out . RPAREN SEMICOLON

    RPAREN          shift and go to state 100


state 79

    (57) type_out -> ID .
    (58) type_out -> ID . COMMA type_out
    (61) type_out -> ID . LBRACKET ID RBRACKET
    (62) type_out -> ID . LBRACKET ID RBRACKET COMMA type_out

    RPAREN          reduce using rule 57 (type_out -> ID .)
    COMMA           shift and go to state 101
    LBRACKET        shift and go to state 102


state 80

    (59) type_out -> TEXT .
    (60) type_out -> TEXT . COMMA type_out

    RPAREN          reduce using rule 59 (type_out -> TEXT .)
    COMMA           shift and go to state 103


state 81

    (56) write_statement -> WRITELN LPAREN type_out . RPAREN SEMICOLON

    RPAREN          shift and go to state 104


state 82

    (3) declaration_var -> declaration_id COLON type_specifier SEMICOLON . declaration_var
    (4) declaration_var -> declaration_id COLON type_specifier SEMICOLON .
    (3) declaration_var -> . declaration_id COLON type_specifier SEMICOLON declaration_var
    (4) declaration_var -> . declaration_id COLON type_specifier SEMICOLON
    (5) declaration_var -> . declaration_list
    (14) declaration_id -> . ID COMMA declaration_id
    (15) declaration_id -> . ID
    (2) declaration_list -> . VAR declaration_var
    (6) declaration_list -> . TYPE declaration_type
    (10) declaration_list -> . USES declaration_uses

    BEGIN           reduce using rule 4 (declaration_var -> declaration_id COLON type_specifier SEMICOLON .)
    ID              shift and go to state 14
    VAR             shift and go to state 6
    TYPE            shift and go to state 7
    USES            shift and go to state 8

    declaration_id                 shift and go to state 12
    declaration_var                shift and go to state 105
    declaration_list               shift and go to state 13

state 83

    (21) type_specifier -> ARRAY LBRACKET . NUMBER SUBRANGE NUMBER RBRACKET OF type_specifier

    NUMBER          shift and go to state 106


state 84

    (7) declaration_type -> declaration_id EQUAL type_specifier SEMICOLON . declaration_type
    (8) declaration_type -> declaration_id EQUAL type_specifier SEMICOLON .
    (7) declaration_type -> . declaration_id EQUAL type_specifier SEMICOLON declaration_type
    (8) declaration_type -> . declaration_id EQUAL type_specifier SEMICOLON
    (9) declaration_type -> . declaration_list
    (14) declaration_id -> . ID COMMA declaration_id
    (15) declaration_id -> . ID
    (2) declaration_list -> . VAR declaration_var
    (6) declaration_list -> . TYPE declaration_type
    (10) declaration_list -> . USES declaration_uses

    BEGIN           reduce using rule 8 (declaration_type -> declaration_id EQUAL type_specifier SEMICOLON .)
    ID              shift and go to state 14
    VAR             shift and go to state 6
    TYPE            shift and go to state 7
    USES            shift and go to state 8

    declaration_id                 shift and go to state 16
    declaration_type               shift and go to state 107
    declaration_list               shift and go to state 17

state 85

    (37) iteration_for -> FOR expression TO expression . DO BEGIN instance END SEMICOLON

    DO              shift and go to state 108


state 86

    (38) iteration_for -> FOR asignation TO expression . DO BEGIN instance END SEMICOLON

    DO              shift and go to state 109


state 87

    (35) expression -> ID LBRACKET ID . RBRACKET

    RBRACKET        shift and go to state 110


state 88

    (36) expression -> ID LBRACKET NUMBER . RBRACKET

    RBRACKET        shift and go to state 111


state 89

    (39) iteration_while -> WHILE LPAREN expression_comparison RPAREN . DO BEGIN instance END SEMICOLON

    DO              shift and go to state 112


state 90

    (40) expression_comparison -> expression comparison . expression
    (33) expression -> . ID
    (34) expression -> . NUMBER
    (35) expression -> . ID LBRACKET ID RBRACKET
    (36) expression -> . ID LBRACKET NUMBER RBRACKET

    ID              shift and go to state 68
    NUMBER          shift and go to state 50

    expression                     shift and go to state 113

state 91

    (41) comparison -> EQUAL .

    ID              reduce using rule 41 (comparison -> EQUAL .)
    NUMBER          reduce using rule 41 (comparison -> EQUAL .)


state 92

    (42) comparison -> LESS .

    ID              reduce using rule 42 (comparison -> LESS .)
    NUMBER          reduce using rule 42 (comparison -> LESS .)


state 93

    (43) comparison -> LESSEQUAL .

    ID              reduce using rule 43 (comparison -> LESSEQUAL .)
    NUMBER          reduce using rule 43 (comparison -> LESSEQUAL .)


state 94

    (44) comparison -> GREATER .

    ID              reduce using rule 44 (comparison -> GREATER .)
    NUMBER          reduce using rule 44 (comparison -> GREATER .)


state 95

    (45) comparison -> GREATEREQUAL .

    ID              reduce using rule 45 (comparison -> GREATEREQUAL .)
    NUMBER          reduce using rule 45 (comparison -> GREATEREQUAL .)


state 96

    (46) comparison -> DEQUAL .

    ID              reduce using rule 46 (comparison -> DEQUAL .)
    NUMBER          reduce using rule 46 (comparison -> DEQUAL .)


state 97

    (47) selection_if -> IF LPAREN expression_comparison RPAREN . THEN BEGIN instance END SEMICOLON
    (48) selection_if -> IF LPAREN expression_comparison RPAREN . THEN instance
    (49) selection_if -> IF LPAREN expression_comparison RPAREN . THEN BEGIN instance END SEMICOLON ELSE instance
    (50) selection_if -> IF LPAREN expression_comparison RPAREN . THEN instance ELSE instance
    (51) selection_if -> IF LPAREN expression_comparison RPAREN . THEN BEGIN instance END SEMICOLON ELSE BEGIN instance END SEMICOLON
    (52) selection_if -> IF LPAREN expression_comparison RPAREN . THEN instance ELSE BEGIN instance END SEMICOLON

    THEN            shift and go to state 114


state 98

    (53) read_statement -> READ LPAREN expression RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 115


state 99

    (54) read_statement -> READLN LPAREN expression RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 116


state 100

    (55) write_statement -> WRITE LPAREN type_out RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 117


state 101

    (58) type_out -> ID COMMA . type_out
    (57) type_out -> . ID
    (58) type_out -> . ID COMMA type_out
    (59) type_out -> . TEXT
    (60) type_out -> . TEXT COMMA type_out
    (61) type_out -> . ID LBRACKET ID RBRACKET
    (62) type_out -> . ID LBRACKET ID RBRACKET COMMA type_out

    ID              shift and go to state 79
    TEXT            shift and go to state 80

    type_out                       shift and go to state 118

state 102

    (61) type_out -> ID LBRACKET . ID RBRACKET
    (62) type_out -> ID LBRACKET . ID RBRACKET COMMA type_out

    ID              shift and go to state 119


state 103

    (60) type_out -> TEXT COMMA . type_out
    (57) type_out -> . ID
    (58) type_out -> . ID COMMA type_out
    (59) type_out -> . TEXT
    (60) type_out -> . TEXT COMMA type_out
    (61) type_out -> . ID LBRACKET ID RBRACKET
    (62) type_out -> . ID LBRACKET ID RBRACKET COMMA type_out

    ID              shift and go to state 79
    TEXT            shift and go to state 80

    type_out                       shift and go to state 120

state 104

    (56) write_statement -> WRITELN LPAREN type_out RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 121


state 105

    (3) declaration_var -> declaration_id COLON type_specifier SEMICOLON declaration_var .

    BEGIN           reduce using rule 3 (declaration_var -> declaration_id COLON type_specifier SEMICOLON declaration_var .)


state 106

    (21) type_specifier -> ARRAY LBRACKET NUMBER . SUBRANGE NUMBER RBRACKET OF type_specifier

    SUBRANGE        shift and go to state 122


state 107

    (7) declaration_type -> declaration_id EQUAL type_specifier SEMICOLON declaration_type .

    BEGIN           reduce using rule 7 (declaration_type -> declaration_id EQUAL type_specifier SEMICOLON declaration_type .)


state 108

    (37) iteration_for -> FOR expression TO expression DO . BEGIN instance END SEMICOLON

    BEGIN           shift and go to state 123


state 109

    (38) iteration_for -> FOR asignation TO expression DO . BEGIN instance END SEMICOLON

    BEGIN           shift and go to state 124


state 110

    (35) expression -> ID LBRACKET ID RBRACKET .

    TO              reduce using rule 35 (expression -> ID LBRACKET ID RBRACKET .)
    SEMICOLON       reduce using rule 35 (expression -> ID LBRACKET ID RBRACKET .)
    EQUAL           reduce using rule 35 (expression -> ID LBRACKET ID RBRACKET .)
    LESS            reduce using rule 35 (expression -> ID LBRACKET ID RBRACKET .)
    LESSEQUAL       reduce using rule 35 (expression -> ID LBRACKET ID RBRACKET .)
    GREATER         reduce using rule 35 (expression -> ID LBRACKET ID RBRACKET .)
    GREATEREQUAL    reduce using rule 35 (expression -> ID LBRACKET ID RBRACKET .)
    DEQUAL          reduce using rule 35 (expression -> ID LBRACKET ID RBRACKET .)
    RPAREN          reduce using rule 35 (expression -> ID LBRACKET ID RBRACKET .)
    DO              reduce using rule 35 (expression -> ID LBRACKET ID RBRACKET .)


state 111

    (36) expression -> ID LBRACKET NUMBER RBRACKET .

    TO              reduce using rule 36 (expression -> ID LBRACKET NUMBER RBRACKET .)
    SEMICOLON       reduce using rule 36 (expression -> ID LBRACKET NUMBER RBRACKET .)
    EQUAL           reduce using rule 36 (expression -> ID LBRACKET NUMBER RBRACKET .)
    LESS            reduce using rule 36 (expression -> ID LBRACKET NUMBER RBRACKET .)
    LESSEQUAL       reduce using rule 36 (expression -> ID LBRACKET NUMBER RBRACKET .)
    GREATER         reduce using rule 36 (expression -> ID LBRACKET NUMBER RBRACKET .)
    GREATEREQUAL    reduce using rule 36 (expression -> ID LBRACKET NUMBER RBRACKET .)
    DEQUAL          reduce using rule 36 (expression -> ID LBRACKET NUMBER RBRACKET .)
    RPAREN          reduce using rule 36 (expression -> ID LBRACKET NUMBER RBRACKET .)
    DO              reduce using rule 36 (expression -> ID LBRACKET NUMBER RBRACKET .)


state 112

    (39) iteration_while -> WHILE LPAREN expression_comparison RPAREN DO . BEGIN instance END SEMICOLON

    BEGIN           shift and go to state 125


state 113

    (40) expression_comparison -> expression comparison expression .

    RPAREN          reduce using rule 40 (expression_comparison -> expression comparison expression .)


state 114

    (47) selection_if -> IF LPAREN expression_comparison RPAREN THEN . BEGIN instance END SEMICOLON
    (48) selection_if -> IF LPAREN expression_comparison RPAREN THEN . instance
    (49) selection_if -> IF LPAREN expression_comparison RPAREN THEN . BEGIN instance END SEMICOLON ELSE instance
    (50) selection_if -> IF LPAREN expression_comparison RPAREN THEN . instance ELSE instance
    (51) selection_if -> IF LPAREN expression_comparison RPAREN THEN . BEGIN instance END SEMICOLON ELSE BEGIN instance END SEMICOLON
    (52) selection_if -> IF LPAREN expression_comparison RPAREN THEN . instance ELSE BEGIN instance END SEMICOLON
    (23) instance -> . group_instance instance
    (24) instance -> . group_instance
    (25) group_instance -> . declaration_id SEMICOLON
    (26) group_instance -> . asignation SEMICOLON
    (27) group_instance -> . iteration_for
    (28) group_instance -> . iteration_while
    (29) group_instance -> . selection_if
    (30) group_instance -> . read_statement
    (31) group_instance -> . write_statement
    (14) declaration_id -> . ID COMMA declaration_id
    (15) declaration_id -> . ID
    (32) asignation -> . ID ASSIGNATION expression
    (37) iteration_for -> . FOR expression TO expression DO BEGIN instance END SEMICOLON
    (38) iteration_for -> . FOR asignation TO expression DO BEGIN instance END SEMICOLON
    (39) iteration_while -> . WHILE LPAREN expression_comparison RPAREN DO BEGIN instance END SEMICOLON
    (47) selection_if -> . IF LPAREN expression_comparison RPAREN THEN BEGIN instance END SEMICOLON
    (48) selection_if -> . IF LPAREN expression_comparison RPAREN THEN instance
    (49) selection_if -> . IF LPAREN expression_comparison RPAREN THEN BEGIN instance END SEMICOLON ELSE instance
    (50) selection_if -> . IF LPAREN expression_comparison RPAREN THEN instance ELSE instance
    (51) selection_if -> . IF LPAREN expression_comparison RPAREN THEN BEGIN instance END SEMICOLON ELSE BEGIN instance END SEMICOLON
    (52) selection_if -> . IF LPAREN expression_comparison RPAREN THEN instance ELSE BEGIN instance END SEMICOLON
    (53) read_statement -> . READ LPAREN expression RPAREN SEMICOLON
    (54) read_statement -> . READLN LPAREN expression RPAREN SEMICOLON
    (55) write_statement -> . WRITE LPAREN type_out RPAREN SEMICOLON
    (56) write_statement -> . WRITELN LPAREN type_out RPAREN SEMICOLON

    BEGIN           shift and go to state 126
    ID              shift and go to state 30
    FOR             shift and go to state 31
    WHILE           shift and go to state 32
    IF              shift and go to state 33
    READ            shift and go to state 34
    READLN          shift and go to state 35
    WRITE           shift and go to state 36
    WRITELN         shift and go to state 37

    instance                       shift and go to state 127
    group_instance                 shift and go to state 22
    declaration_id                 shift and go to state 23
    asignation                     shift and go to state 24
    iteration_for                  shift and go to state 25
    iteration_while                shift and go to state 26
    selection_if                   shift and go to state 27
    read_statement                 shift and go to state 28
    write_statement                shift and go to state 29

state 115

    (53) read_statement -> READ LPAREN expression RPAREN SEMICOLON .

    ID              reduce using rule 53 (read_statement -> READ LPAREN expression RPAREN SEMICOLON .)
    FOR             reduce using rule 53 (read_statement -> READ LPAREN expression RPAREN SEMICOLON .)
    WHILE           reduce using rule 53 (read_statement -> READ LPAREN expression RPAREN SEMICOLON .)
    IF              reduce using rule 53 (read_statement -> READ LPAREN expression RPAREN SEMICOLON .)
    READ            reduce using rule 53 (read_statement -> READ LPAREN expression RPAREN SEMICOLON .)
    READLN          reduce using rule 53 (read_statement -> READ LPAREN expression RPAREN SEMICOLON .)
    WRITE           reduce using rule 53 (read_statement -> READ LPAREN expression RPAREN SEMICOLON .)
    WRITELN         reduce using rule 53 (read_statement -> READ LPAREN expression RPAREN SEMICOLON .)
    END             reduce using rule 53 (read_statement -> READ LPAREN expression RPAREN SEMICOLON .)
    ELSE            reduce using rule 53 (read_statement -> READ LPAREN expression RPAREN SEMICOLON .)


state 116

    (54) read_statement -> READLN LPAREN expression RPAREN SEMICOLON .

    ID              reduce using rule 54 (read_statement -> READLN LPAREN expression RPAREN SEMICOLON .)
    FOR             reduce using rule 54 (read_statement -> READLN LPAREN expression RPAREN SEMICOLON .)
    WHILE           reduce using rule 54 (read_statement -> READLN LPAREN expression RPAREN SEMICOLON .)
    IF              reduce using rule 54 (read_statement -> READLN LPAREN expression RPAREN SEMICOLON .)
    READ            reduce using rule 54 (read_statement -> READLN LPAREN expression RPAREN SEMICOLON .)
    READLN          reduce using rule 54 (read_statement -> READLN LPAREN expression RPAREN SEMICOLON .)
    WRITE           reduce using rule 54 (read_statement -> READLN LPAREN expression RPAREN SEMICOLON .)
    WRITELN         reduce using rule 54 (read_statement -> READLN LPAREN expression RPAREN SEMICOLON .)
    END             reduce using rule 54 (read_statement -> READLN LPAREN expression RPAREN SEMICOLON .)
    ELSE            reduce using rule 54 (read_statement -> READLN LPAREN expression RPAREN SEMICOLON .)


state 117

    (55) write_statement -> WRITE LPAREN type_out RPAREN SEMICOLON .

    ID              reduce using rule 55 (write_statement -> WRITE LPAREN type_out RPAREN SEMICOLON .)
    FOR             reduce using rule 55 (write_statement -> WRITE LPAREN type_out RPAREN SEMICOLON .)
    WHILE           reduce using rule 55 (write_statement -> WRITE LPAREN type_out RPAREN SEMICOLON .)
    IF              reduce using rule 55 (write_statement -> WRITE LPAREN type_out RPAREN SEMICOLON .)
    READ            reduce using rule 55 (write_statement -> WRITE LPAREN type_out RPAREN SEMICOLON .)
    READLN          reduce using rule 55 (write_statement -> WRITE LPAREN type_out RPAREN SEMICOLON .)
    WRITE           reduce using rule 55 (write_statement -> WRITE LPAREN type_out RPAREN SEMICOLON .)
    WRITELN         reduce using rule 55 (write_statement -> WRITE LPAREN type_out RPAREN SEMICOLON .)
    END             reduce using rule 55 (write_statement -> WRITE LPAREN type_out RPAREN SEMICOLON .)
    ELSE            reduce using rule 55 (write_statement -> WRITE LPAREN type_out RPAREN SEMICOLON .)


state 118

    (58) type_out -> ID COMMA type_out .

    RPAREN          reduce using rule 58 (type_out -> ID COMMA type_out .)


state 119

    (61) type_out -> ID LBRACKET ID . RBRACKET
    (62) type_out -> ID LBRACKET ID . RBRACKET COMMA type_out

    RBRACKET        shift and go to state 128


state 120

    (60) type_out -> TEXT COMMA type_out .

    RPAREN          reduce using rule 60 (type_out -> TEXT COMMA type_out .)


state 121

    (56) write_statement -> WRITELN LPAREN type_out RPAREN SEMICOLON .

    ID              reduce using rule 56 (write_statement -> WRITELN LPAREN type_out RPAREN SEMICOLON .)
    FOR             reduce using rule 56 (write_statement -> WRITELN LPAREN type_out RPAREN SEMICOLON .)
    WHILE           reduce using rule 56 (write_statement -> WRITELN LPAREN type_out RPAREN SEMICOLON .)
    IF              reduce using rule 56 (write_statement -> WRITELN LPAREN type_out RPAREN SEMICOLON .)
    READ            reduce using rule 56 (write_statement -> WRITELN LPAREN type_out RPAREN SEMICOLON .)
    READLN          reduce using rule 56 (write_statement -> WRITELN LPAREN type_out RPAREN SEMICOLON .)
    WRITE           reduce using rule 56 (write_statement -> WRITELN LPAREN type_out RPAREN SEMICOLON .)
    WRITELN         reduce using rule 56 (write_statement -> WRITELN LPAREN type_out RPAREN SEMICOLON .)
    END             reduce using rule 56 (write_statement -> WRITELN LPAREN type_out RPAREN SEMICOLON .)
    ELSE            reduce using rule 56 (write_statement -> WRITELN LPAREN type_out RPAREN SEMICOLON .)


state 122

    (21) type_specifier -> ARRAY LBRACKET NUMBER SUBRANGE . NUMBER RBRACKET OF type_specifier

    NUMBER          shift and go to state 129


state 123

    (37) iteration_for -> FOR expression TO expression DO BEGIN . instance END SEMICOLON
    (23) instance -> . group_instance instance
    (24) instance -> . group_instance
    (25) group_instance -> . declaration_id SEMICOLON
    (26) group_instance -> . asignation SEMICOLON
    (27) group_instance -> . iteration_for
    (28) group_instance -> . iteration_while
    (29) group_instance -> . selection_if
    (30) group_instance -> . read_statement
    (31) group_instance -> . write_statement
    (14) declaration_id -> . ID COMMA declaration_id
    (15) declaration_id -> . ID
    (32) asignation -> . ID ASSIGNATION expression
    (37) iteration_for -> . FOR expression TO expression DO BEGIN instance END SEMICOLON
    (38) iteration_for -> . FOR asignation TO expression DO BEGIN instance END SEMICOLON
    (39) iteration_while -> . WHILE LPAREN expression_comparison RPAREN DO BEGIN instance END SEMICOLON
    (47) selection_if -> . IF LPAREN expression_comparison RPAREN THEN BEGIN instance END SEMICOLON
    (48) selection_if -> . IF LPAREN expression_comparison RPAREN THEN instance
    (49) selection_if -> . IF LPAREN expression_comparison RPAREN THEN BEGIN instance END SEMICOLON ELSE instance
    (50) selection_if -> . IF LPAREN expression_comparison RPAREN THEN instance ELSE instance
    (51) selection_if -> . IF LPAREN expression_comparison RPAREN THEN BEGIN instance END SEMICOLON ELSE BEGIN instance END SEMICOLON
    (52) selection_if -> . IF LPAREN expression_comparison RPAREN THEN instance ELSE BEGIN instance END SEMICOLON
    (53) read_statement -> . READ LPAREN expression RPAREN SEMICOLON
    (54) read_statement -> . READLN LPAREN expression RPAREN SEMICOLON
    (55) write_statement -> . WRITE LPAREN type_out RPAREN SEMICOLON
    (56) write_statement -> . WRITELN LPAREN type_out RPAREN SEMICOLON

    ID              shift and go to state 30
    FOR             shift and go to state 31
    WHILE           shift and go to state 32
    IF              shift and go to state 33
    READ            shift and go to state 34
    READLN          shift and go to state 35
    WRITE           shift and go to state 36
    WRITELN         shift and go to state 37

    instance                       shift and go to state 130
    group_instance                 shift and go to state 22
    declaration_id                 shift and go to state 23
    asignation                     shift and go to state 24
    iteration_for                  shift and go to state 25
    iteration_while                shift and go to state 26
    selection_if                   shift and go to state 27
    read_statement                 shift and go to state 28
    write_statement                shift and go to state 29

state 124

    (38) iteration_for -> FOR asignation TO expression DO BEGIN . instance END SEMICOLON
    (23) instance -> . group_instance instance
    (24) instance -> . group_instance
    (25) group_instance -> . declaration_id SEMICOLON
    (26) group_instance -> . asignation SEMICOLON
    (27) group_instance -> . iteration_for
    (28) group_instance -> . iteration_while
    (29) group_instance -> . selection_if
    (30) group_instance -> . read_statement
    (31) group_instance -> . write_statement
    (14) declaration_id -> . ID COMMA declaration_id
    (15) declaration_id -> . ID
    (32) asignation -> . ID ASSIGNATION expression
    (37) iteration_for -> . FOR expression TO expression DO BEGIN instance END SEMICOLON
    (38) iteration_for -> . FOR asignation TO expression DO BEGIN instance END SEMICOLON
    (39) iteration_while -> . WHILE LPAREN expression_comparison RPAREN DO BEGIN instance END SEMICOLON
    (47) selection_if -> . IF LPAREN expression_comparison RPAREN THEN BEGIN instance END SEMICOLON
    (48) selection_if -> . IF LPAREN expression_comparison RPAREN THEN instance
    (49) selection_if -> . IF LPAREN expression_comparison RPAREN THEN BEGIN instance END SEMICOLON ELSE instance
    (50) selection_if -> . IF LPAREN expression_comparison RPAREN THEN instance ELSE instance
    (51) selection_if -> . IF LPAREN expression_comparison RPAREN THEN BEGIN instance END SEMICOLON ELSE BEGIN instance END SEMICOLON
    (52) selection_if -> . IF LPAREN expression_comparison RPAREN THEN instance ELSE BEGIN instance END SEMICOLON
    (53) read_statement -> . READ LPAREN expression RPAREN SEMICOLON
    (54) read_statement -> . READLN LPAREN expression RPAREN SEMICOLON
    (55) write_statement -> . WRITE LPAREN type_out RPAREN SEMICOLON
    (56) write_statement -> . WRITELN LPAREN type_out RPAREN SEMICOLON

    ID              shift and go to state 30
    FOR             shift and go to state 31
    WHILE           shift and go to state 32
    IF              shift and go to state 33
    READ            shift and go to state 34
    READLN          shift and go to state 35
    WRITE           shift and go to state 36
    WRITELN         shift and go to state 37

    asignation                     shift and go to state 24
    instance                       shift and go to state 131
    group_instance                 shift and go to state 22
    declaration_id                 shift and go to state 23
    iteration_for                  shift and go to state 25
    iteration_while                shift and go to state 26
    selection_if                   shift and go to state 27
    read_statement                 shift and go to state 28
    write_statement                shift and go to state 29

state 125

    (39) iteration_while -> WHILE LPAREN expression_comparison RPAREN DO BEGIN . instance END SEMICOLON
    (23) instance -> . group_instance instance
    (24) instance -> . group_instance
    (25) group_instance -> . declaration_id SEMICOLON
    (26) group_instance -> . asignation SEMICOLON
    (27) group_instance -> . iteration_for
    (28) group_instance -> . iteration_while
    (29) group_instance -> . selection_if
    (30) group_instance -> . read_statement
    (31) group_instance -> . write_statement
    (14) declaration_id -> . ID COMMA declaration_id
    (15) declaration_id -> . ID
    (32) asignation -> . ID ASSIGNATION expression
    (37) iteration_for -> . FOR expression TO expression DO BEGIN instance END SEMICOLON
    (38) iteration_for -> . FOR asignation TO expression DO BEGIN instance END SEMICOLON
    (39) iteration_while -> . WHILE LPAREN expression_comparison RPAREN DO BEGIN instance END SEMICOLON
    (47) selection_if -> . IF LPAREN expression_comparison RPAREN THEN BEGIN instance END SEMICOLON
    (48) selection_if -> . IF LPAREN expression_comparison RPAREN THEN instance
    (49) selection_if -> . IF LPAREN expression_comparison RPAREN THEN BEGIN instance END SEMICOLON ELSE instance
    (50) selection_if -> . IF LPAREN expression_comparison RPAREN THEN instance ELSE instance
    (51) selection_if -> . IF LPAREN expression_comparison RPAREN THEN BEGIN instance END SEMICOLON ELSE BEGIN instance END SEMICOLON
    (52) selection_if -> . IF LPAREN expression_comparison RPAREN THEN instance ELSE BEGIN instance END SEMICOLON
    (53) read_statement -> . READ LPAREN expression RPAREN SEMICOLON
    (54) read_statement -> . READLN LPAREN expression RPAREN SEMICOLON
    (55) write_statement -> . WRITE LPAREN type_out RPAREN SEMICOLON
    (56) write_statement -> . WRITELN LPAREN type_out RPAREN SEMICOLON

    ID              shift and go to state 30
    FOR             shift and go to state 31
    WHILE           shift and go to state 32
    IF              shift and go to state 33
    READ            shift and go to state 34
    READLN          shift and go to state 35
    WRITE           shift and go to state 36
    WRITELN         shift and go to state 37

    instance                       shift and go to state 132
    group_instance                 shift and go to state 22
    declaration_id                 shift and go to state 23
    asignation                     shift and go to state 24
    iteration_for                  shift and go to state 25
    iteration_while                shift and go to state 26
    selection_if                   shift and go to state 27
    read_statement                 shift and go to state 28
    write_statement                shift and go to state 29

state 126

    (47) selection_if -> IF LPAREN expression_comparison RPAREN THEN BEGIN . instance END SEMICOLON
    (49) selection_if -> IF LPAREN expression_comparison RPAREN THEN BEGIN . instance END SEMICOLON ELSE instance
    (51) selection_if -> IF LPAREN expression_comparison RPAREN THEN BEGIN . instance END SEMICOLON ELSE BEGIN instance END SEMICOLON
    (23) instance -> . group_instance instance
    (24) instance -> . group_instance
    (25) group_instance -> . declaration_id SEMICOLON
    (26) group_instance -> . asignation SEMICOLON
    (27) group_instance -> . iteration_for
    (28) group_instance -> . iteration_while
    (29) group_instance -> . selection_if
    (30) group_instance -> . read_statement
    (31) group_instance -> . write_statement
    (14) declaration_id -> . ID COMMA declaration_id
    (15) declaration_id -> . ID
    (32) asignation -> . ID ASSIGNATION expression
    (37) iteration_for -> . FOR expression TO expression DO BEGIN instance END SEMICOLON
    (38) iteration_for -> . FOR asignation TO expression DO BEGIN instance END SEMICOLON
    (39) iteration_while -> . WHILE LPAREN expression_comparison RPAREN DO BEGIN instance END SEMICOLON
    (47) selection_if -> . IF LPAREN expression_comparison RPAREN THEN BEGIN instance END SEMICOLON
    (48) selection_if -> . IF LPAREN expression_comparison RPAREN THEN instance
    (49) selection_if -> . IF LPAREN expression_comparison RPAREN THEN BEGIN instance END SEMICOLON ELSE instance
    (50) selection_if -> . IF LPAREN expression_comparison RPAREN THEN instance ELSE instance
    (51) selection_if -> . IF LPAREN expression_comparison RPAREN THEN BEGIN instance END SEMICOLON ELSE BEGIN instance END SEMICOLON
    (52) selection_if -> . IF LPAREN expression_comparison RPAREN THEN instance ELSE BEGIN instance END SEMICOLON
    (53) read_statement -> . READ LPAREN expression RPAREN SEMICOLON
    (54) read_statement -> . READLN LPAREN expression RPAREN SEMICOLON
    (55) write_statement -> . WRITE LPAREN type_out RPAREN SEMICOLON
    (56) write_statement -> . WRITELN LPAREN type_out RPAREN SEMICOLON

    ID              shift and go to state 30
    FOR             shift and go to state 31
    WHILE           shift and go to state 32
    IF              shift and go to state 33
    READ            shift and go to state 34
    READLN          shift and go to state 35
    WRITE           shift and go to state 36
    WRITELN         shift and go to state 37

    instance                       shift and go to state 133
    group_instance                 shift and go to state 22
    declaration_id                 shift and go to state 23
    asignation                     shift and go to state 24
    iteration_for                  shift and go to state 25
    iteration_while                shift and go to state 26
    selection_if                   shift and go to state 27
    read_statement                 shift and go to state 28
    write_statement                shift and go to state 29

state 127

    (48) selection_if -> IF LPAREN expression_comparison RPAREN THEN instance .
    (50) selection_if -> IF LPAREN expression_comparison RPAREN THEN instance . ELSE instance
    (52) selection_if -> IF LPAREN expression_comparison RPAREN THEN instance . ELSE BEGIN instance END SEMICOLON

  ! shift/reduce conflict for ELSE resolved as shift
    ID              reduce using rule 48 (selection_if -> IF LPAREN expression_comparison RPAREN THEN instance .)
    FOR             reduce using rule 48 (selection_if -> IF LPAREN expression_comparison RPAREN THEN instance .)
    WHILE           reduce using rule 48 (selection_if -> IF LPAREN expression_comparison RPAREN THEN instance .)
    IF              reduce using rule 48 (selection_if -> IF LPAREN expression_comparison RPAREN THEN instance .)
    READ            reduce using rule 48 (selection_if -> IF LPAREN expression_comparison RPAREN THEN instance .)
    READLN          reduce using rule 48 (selection_if -> IF LPAREN expression_comparison RPAREN THEN instance .)
    WRITE           reduce using rule 48 (selection_if -> IF LPAREN expression_comparison RPAREN THEN instance .)
    WRITELN         reduce using rule 48 (selection_if -> IF LPAREN expression_comparison RPAREN THEN instance .)
    END             reduce using rule 48 (selection_if -> IF LPAREN expression_comparison RPAREN THEN instance .)
    ELSE            shift and go to state 134

  ! ELSE            [ reduce using rule 48 (selection_if -> IF LPAREN expression_comparison RPAREN THEN instance .) ]


state 128

    (61) type_out -> ID LBRACKET ID RBRACKET .
    (62) type_out -> ID LBRACKET ID RBRACKET . COMMA type_out

    RPAREN          reduce using rule 61 (type_out -> ID LBRACKET ID RBRACKET .)
    COMMA           shift and go to state 135


state 129

    (21) type_specifier -> ARRAY LBRACKET NUMBER SUBRANGE NUMBER . RBRACKET OF type_specifier

    RBRACKET        shift and go to state 136


state 130

    (37) iteration_for -> FOR expression TO expression DO BEGIN instance . END SEMICOLON

    END             shift and go to state 137


state 131

    (38) iteration_for -> FOR asignation TO expression DO BEGIN instance . END SEMICOLON

    END             shift and go to state 138


state 132

    (39) iteration_while -> WHILE LPAREN expression_comparison RPAREN DO BEGIN instance . END SEMICOLON

    END             shift and go to state 139


state 133

    (47) selection_if -> IF LPAREN expression_comparison RPAREN THEN BEGIN instance . END SEMICOLON
    (49) selection_if -> IF LPAREN expression_comparison RPAREN THEN BEGIN instance . END SEMICOLON ELSE instance
    (51) selection_if -> IF LPAREN expression_comparison RPAREN THEN BEGIN instance . END SEMICOLON ELSE BEGIN instance END SEMICOLON

    END             shift and go to state 140


state 134

    (50) selection_if -> IF LPAREN expression_comparison RPAREN THEN instance ELSE . instance
    (52) selection_if -> IF LPAREN expression_comparison RPAREN THEN instance ELSE . BEGIN instance END SEMICOLON
    (23) instance -> . group_instance instance
    (24) instance -> . group_instance
    (25) group_instance -> . declaration_id SEMICOLON
    (26) group_instance -> . asignation SEMICOLON
    (27) group_instance -> . iteration_for
    (28) group_instance -> . iteration_while
    (29) group_instance -> . selection_if
    (30) group_instance -> . read_statement
    (31) group_instance -> . write_statement
    (14) declaration_id -> . ID COMMA declaration_id
    (15) declaration_id -> . ID
    (32) asignation -> . ID ASSIGNATION expression
    (37) iteration_for -> . FOR expression TO expression DO BEGIN instance END SEMICOLON
    (38) iteration_for -> . FOR asignation TO expression DO BEGIN instance END SEMICOLON
    (39) iteration_while -> . WHILE LPAREN expression_comparison RPAREN DO BEGIN instance END SEMICOLON
    (47) selection_if -> . IF LPAREN expression_comparison RPAREN THEN BEGIN instance END SEMICOLON
    (48) selection_if -> . IF LPAREN expression_comparison RPAREN THEN instance
    (49) selection_if -> . IF LPAREN expression_comparison RPAREN THEN BEGIN instance END SEMICOLON ELSE instance
    (50) selection_if -> . IF LPAREN expression_comparison RPAREN THEN instance ELSE instance
    (51) selection_if -> . IF LPAREN expression_comparison RPAREN THEN BEGIN instance END SEMICOLON ELSE BEGIN instance END SEMICOLON
    (52) selection_if -> . IF LPAREN expression_comparison RPAREN THEN instance ELSE BEGIN instance END SEMICOLON
    (53) read_statement -> . READ LPAREN expression RPAREN SEMICOLON
    (54) read_statement -> . READLN LPAREN expression RPAREN SEMICOLON
    (55) write_statement -> . WRITE LPAREN type_out RPAREN SEMICOLON
    (56) write_statement -> . WRITELN LPAREN type_out RPAREN SEMICOLON

    BEGIN           shift and go to state 142
    ID              shift and go to state 30
    FOR             shift and go to state 31
    WHILE           shift and go to state 32
    IF              shift and go to state 33
    READ            shift and go to state 34
    READLN          shift and go to state 35
    WRITE           shift and go to state 36
    WRITELN         shift and go to state 37

    instance                       shift and go to state 141
    group_instance                 shift and go to state 22
    declaration_id                 shift and go to state 23
    asignation                     shift and go to state 24
    iteration_for                  shift and go to state 25
    iteration_while                shift and go to state 26
    selection_if                   shift and go to state 27
    read_statement                 shift and go to state 28
    write_statement                shift and go to state 29

state 135

    (62) type_out -> ID LBRACKET ID RBRACKET COMMA . type_out
    (57) type_out -> . ID
    (58) type_out -> . ID COMMA type_out
    (59) type_out -> . TEXT
    (60) type_out -> . TEXT COMMA type_out
    (61) type_out -> . ID LBRACKET ID RBRACKET
    (62) type_out -> . ID LBRACKET ID RBRACKET COMMA type_out

    ID              shift and go to state 79
    TEXT            shift and go to state 80

    type_out                       shift and go to state 143

state 136

    (21) type_specifier -> ARRAY LBRACKET NUMBER SUBRANGE NUMBER RBRACKET . OF type_specifier

    OF              shift and go to state 144


state 137

    (37) iteration_for -> FOR expression TO expression DO BEGIN instance END . SEMICOLON

    SEMICOLON       shift and go to state 145


state 138

    (38) iteration_for -> FOR asignation TO expression DO BEGIN instance END . SEMICOLON

    SEMICOLON       shift and go to state 146


state 139

    (39) iteration_while -> WHILE LPAREN expression_comparison RPAREN DO BEGIN instance END . SEMICOLON

    SEMICOLON       shift and go to state 147


state 140

    (47) selection_if -> IF LPAREN expression_comparison RPAREN THEN BEGIN instance END . SEMICOLON
    (49) selection_if -> IF LPAREN expression_comparison RPAREN THEN BEGIN instance END . SEMICOLON ELSE instance
    (51) selection_if -> IF LPAREN expression_comparison RPAREN THEN BEGIN instance END . SEMICOLON ELSE BEGIN instance END SEMICOLON

    SEMICOLON       shift and go to state 148


state 141

    (50) selection_if -> IF LPAREN expression_comparison RPAREN THEN instance ELSE instance .

    ID              reduce using rule 50 (selection_if -> IF LPAREN expression_comparison RPAREN THEN instance ELSE instance .)
    FOR             reduce using rule 50 (selection_if -> IF LPAREN expression_comparison RPAREN THEN instance ELSE instance .)
    WHILE           reduce using rule 50 (selection_if -> IF LPAREN expression_comparison RPAREN THEN instance ELSE instance .)
    IF              reduce using rule 50 (selection_if -> IF LPAREN expression_comparison RPAREN THEN instance ELSE instance .)
    READ            reduce using rule 50 (selection_if -> IF LPAREN expression_comparison RPAREN THEN instance ELSE instance .)
    READLN          reduce using rule 50 (selection_if -> IF LPAREN expression_comparison RPAREN THEN instance ELSE instance .)
    WRITE           reduce using rule 50 (selection_if -> IF LPAREN expression_comparison RPAREN THEN instance ELSE instance .)
    WRITELN         reduce using rule 50 (selection_if -> IF LPAREN expression_comparison RPAREN THEN instance ELSE instance .)
    END             reduce using rule 50 (selection_if -> IF LPAREN expression_comparison RPAREN THEN instance ELSE instance .)
    ELSE            reduce using rule 50 (selection_if -> IF LPAREN expression_comparison RPAREN THEN instance ELSE instance .)


state 142

    (52) selection_if -> IF LPAREN expression_comparison RPAREN THEN instance ELSE BEGIN . instance END SEMICOLON
    (23) instance -> . group_instance instance
    (24) instance -> . group_instance
    (25) group_instance -> . declaration_id SEMICOLON
    (26) group_instance -> . asignation SEMICOLON
    (27) group_instance -> . iteration_for
    (28) group_instance -> . iteration_while
    (29) group_instance -> . selection_if
    (30) group_instance -> . read_statement
    (31) group_instance -> . write_statement
    (14) declaration_id -> . ID COMMA declaration_id
    (15) declaration_id -> . ID
    (32) asignation -> . ID ASSIGNATION expression
    (37) iteration_for -> . FOR expression TO expression DO BEGIN instance END SEMICOLON
    (38) iteration_for -> . FOR asignation TO expression DO BEGIN instance END SEMICOLON
    (39) iteration_while -> . WHILE LPAREN expression_comparison RPAREN DO BEGIN instance END SEMICOLON
    (47) selection_if -> . IF LPAREN expression_comparison RPAREN THEN BEGIN instance END SEMICOLON
    (48) selection_if -> . IF LPAREN expression_comparison RPAREN THEN instance
    (49) selection_if -> . IF LPAREN expression_comparison RPAREN THEN BEGIN instance END SEMICOLON ELSE instance
    (50) selection_if -> . IF LPAREN expression_comparison RPAREN THEN instance ELSE instance
    (51) selection_if -> . IF LPAREN expression_comparison RPAREN THEN BEGIN instance END SEMICOLON ELSE BEGIN instance END SEMICOLON
    (52) selection_if -> . IF LPAREN expression_comparison RPAREN THEN instance ELSE BEGIN instance END SEMICOLON
    (53) read_statement -> . READ LPAREN expression RPAREN SEMICOLON
    (54) read_statement -> . READLN LPAREN expression RPAREN SEMICOLON
    (55) write_statement -> . WRITE LPAREN type_out RPAREN SEMICOLON
    (56) write_statement -> . WRITELN LPAREN type_out RPAREN SEMICOLON

    ID              shift and go to state 30
    FOR             shift and go to state 31
    WHILE           shift and go to state 32
    IF              shift and go to state 33
    READ            shift and go to state 34
    READLN          shift and go to state 35
    WRITE           shift and go to state 36
    WRITELN         shift and go to state 37

    instance                       shift and go to state 149
    group_instance                 shift and go to state 22
    declaration_id                 shift and go to state 23
    asignation                     shift and go to state 24
    iteration_for                  shift and go to state 25
    iteration_while                shift and go to state 26
    selection_if                   shift and go to state 27
    read_statement                 shift and go to state 28
    write_statement                shift and go to state 29

state 143

    (62) type_out -> ID LBRACKET ID RBRACKET COMMA type_out .

    RPAREN          reduce using rule 62 (type_out -> ID LBRACKET ID RBRACKET COMMA type_out .)


state 144

    (21) type_specifier -> ARRAY LBRACKET NUMBER SUBRANGE NUMBER RBRACKET OF . type_specifier
    (16) type_specifier -> . REAL
    (17) type_specifier -> . CHAR
    (18) type_specifier -> . BOOLEAN
    (19) type_specifier -> . STRING
    (20) type_specifier -> . ID
    (21) type_specifier -> . ARRAY LBRACKET NUMBER SUBRANGE NUMBER RBRACKET OF type_specifier

    REAL            shift and go to state 58
    CHAR            shift and go to state 59
    BOOLEAN         shift and go to state 60
    STRING          shift and go to state 61
    ID              shift and go to state 62
    ARRAY           shift and go to state 63

    type_specifier                 shift and go to state 150

state 145

    (37) iteration_for -> FOR expression TO expression DO BEGIN instance END SEMICOLON .

    ID              reduce using rule 37 (iteration_for -> FOR expression TO expression DO BEGIN instance END SEMICOLON .)
    FOR             reduce using rule 37 (iteration_for -> FOR expression TO expression DO BEGIN instance END SEMICOLON .)
    WHILE           reduce using rule 37 (iteration_for -> FOR expression TO expression DO BEGIN instance END SEMICOLON .)
    IF              reduce using rule 37 (iteration_for -> FOR expression TO expression DO BEGIN instance END SEMICOLON .)
    READ            reduce using rule 37 (iteration_for -> FOR expression TO expression DO BEGIN instance END SEMICOLON .)
    READLN          reduce using rule 37 (iteration_for -> FOR expression TO expression DO BEGIN instance END SEMICOLON .)
    WRITE           reduce using rule 37 (iteration_for -> FOR expression TO expression DO BEGIN instance END SEMICOLON .)
    WRITELN         reduce using rule 37 (iteration_for -> FOR expression TO expression DO BEGIN instance END SEMICOLON .)
    END             reduce using rule 37 (iteration_for -> FOR expression TO expression DO BEGIN instance END SEMICOLON .)
    ELSE            reduce using rule 37 (iteration_for -> FOR expression TO expression DO BEGIN instance END SEMICOLON .)


state 146

    (38) iteration_for -> FOR asignation TO expression DO BEGIN instance END SEMICOLON .

    ID              reduce using rule 38 (iteration_for -> FOR asignation TO expression DO BEGIN instance END SEMICOLON .)
    FOR             reduce using rule 38 (iteration_for -> FOR asignation TO expression DO BEGIN instance END SEMICOLON .)
    WHILE           reduce using rule 38 (iteration_for -> FOR asignation TO expression DO BEGIN instance END SEMICOLON .)
    IF              reduce using rule 38 (iteration_for -> FOR asignation TO expression DO BEGIN instance END SEMICOLON .)
    READ            reduce using rule 38 (iteration_for -> FOR asignation TO expression DO BEGIN instance END SEMICOLON .)
    READLN          reduce using rule 38 (iteration_for -> FOR asignation TO expression DO BEGIN instance END SEMICOLON .)
    WRITE           reduce using rule 38 (iteration_for -> FOR asignation TO expression DO BEGIN instance END SEMICOLON .)
    WRITELN         reduce using rule 38 (iteration_for -> FOR asignation TO expression DO BEGIN instance END SEMICOLON .)
    END             reduce using rule 38 (iteration_for -> FOR asignation TO expression DO BEGIN instance END SEMICOLON .)
    ELSE            reduce using rule 38 (iteration_for -> FOR asignation TO expression DO BEGIN instance END SEMICOLON .)


state 147

    (39) iteration_while -> WHILE LPAREN expression_comparison RPAREN DO BEGIN instance END SEMICOLON .

    ID              reduce using rule 39 (iteration_while -> WHILE LPAREN expression_comparison RPAREN DO BEGIN instance END SEMICOLON .)
    FOR             reduce using rule 39 (iteration_while -> WHILE LPAREN expression_comparison RPAREN DO BEGIN instance END SEMICOLON .)
    WHILE           reduce using rule 39 (iteration_while -> WHILE LPAREN expression_comparison RPAREN DO BEGIN instance END SEMICOLON .)
    IF              reduce using rule 39 (iteration_while -> WHILE LPAREN expression_comparison RPAREN DO BEGIN instance END SEMICOLON .)
    READ            reduce using rule 39 (iteration_while -> WHILE LPAREN expression_comparison RPAREN DO BEGIN instance END SEMICOLON .)
    READLN          reduce using rule 39 (iteration_while -> WHILE LPAREN expression_comparison RPAREN DO BEGIN instance END SEMICOLON .)
    WRITE           reduce using rule 39 (iteration_while -> WHILE LPAREN expression_comparison RPAREN DO BEGIN instance END SEMICOLON .)
    WRITELN         reduce using rule 39 (iteration_while -> WHILE LPAREN expression_comparison RPAREN DO BEGIN instance END SEMICOLON .)
    END             reduce using rule 39 (iteration_while -> WHILE LPAREN expression_comparison RPAREN DO BEGIN instance END SEMICOLON .)
    ELSE            reduce using rule 39 (iteration_while -> WHILE LPAREN expression_comparison RPAREN DO BEGIN instance END SEMICOLON .)


state 148

    (47) selection_if -> IF LPAREN expression_comparison RPAREN THEN BEGIN instance END SEMICOLON .
    (49) selection_if -> IF LPAREN expression_comparison RPAREN THEN BEGIN instance END SEMICOLON . ELSE instance
    (51) selection_if -> IF LPAREN expression_comparison RPAREN THEN BEGIN instance END SEMICOLON . ELSE BEGIN instance END SEMICOLON

  ! shift/reduce conflict for ELSE resolved as shift
    ID              reduce using rule 47 (selection_if -> IF LPAREN expression_comparison RPAREN THEN BEGIN instance END SEMICOLON .)
    FOR             reduce using rule 47 (selection_if -> IF LPAREN expression_comparison RPAREN THEN BEGIN instance END SEMICOLON .)
    WHILE           reduce using rule 47 (selection_if -> IF LPAREN expression_comparison RPAREN THEN BEGIN instance END SEMICOLON .)
    IF              reduce using rule 47 (selection_if -> IF LPAREN expression_comparison RPAREN THEN BEGIN instance END SEMICOLON .)
    READ            reduce using rule 47 (selection_if -> IF LPAREN expression_comparison RPAREN THEN BEGIN instance END SEMICOLON .)
    READLN          reduce using rule 47 (selection_if -> IF LPAREN expression_comparison RPAREN THEN BEGIN instance END SEMICOLON .)
    WRITE           reduce using rule 47 (selection_if -> IF LPAREN expression_comparison RPAREN THEN BEGIN instance END SEMICOLON .)
    WRITELN         reduce using rule 47 (selection_if -> IF LPAREN expression_comparison RPAREN THEN BEGIN instance END SEMICOLON .)
    END             reduce using rule 47 (selection_if -> IF LPAREN expression_comparison RPAREN THEN BEGIN instance END SEMICOLON .)
    ELSE            shift and go to state 151

  ! ELSE            [ reduce using rule 47 (selection_if -> IF LPAREN expression_comparison RPAREN THEN BEGIN instance END SEMICOLON .) ]


state 149

    (52) selection_if -> IF LPAREN expression_comparison RPAREN THEN instance ELSE BEGIN instance . END SEMICOLON

    END             shift and go to state 152


state 150

    (21) type_specifier -> ARRAY LBRACKET NUMBER SUBRANGE NUMBER RBRACKET OF type_specifier .

    SEMICOLON       reduce using rule 21 (type_specifier -> ARRAY LBRACKET NUMBER SUBRANGE NUMBER RBRACKET OF type_specifier .)


state 151

    (49) selection_if -> IF LPAREN expression_comparison RPAREN THEN BEGIN instance END SEMICOLON ELSE . instance
    (51) selection_if -> IF LPAREN expression_comparison RPAREN THEN BEGIN instance END SEMICOLON ELSE . BEGIN instance END SEMICOLON
    (23) instance -> . group_instance instance
    (24) instance -> . group_instance
    (25) group_instance -> . declaration_id SEMICOLON
    (26) group_instance -> . asignation SEMICOLON
    (27) group_instance -> . iteration_for
    (28) group_instance -> . iteration_while
    (29) group_instance -> . selection_if
    (30) group_instance -> . read_statement
    (31) group_instance -> . write_statement
    (14) declaration_id -> . ID COMMA declaration_id
    (15) declaration_id -> . ID
    (32) asignation -> . ID ASSIGNATION expression
    (37) iteration_for -> . FOR expression TO expression DO BEGIN instance END SEMICOLON
    (38) iteration_for -> . FOR asignation TO expression DO BEGIN instance END SEMICOLON
    (39) iteration_while -> . WHILE LPAREN expression_comparison RPAREN DO BEGIN instance END SEMICOLON
    (47) selection_if -> . IF LPAREN expression_comparison RPAREN THEN BEGIN instance END SEMICOLON
    (48) selection_if -> . IF LPAREN expression_comparison RPAREN THEN instance
    (49) selection_if -> . IF LPAREN expression_comparison RPAREN THEN BEGIN instance END SEMICOLON ELSE instance
    (50) selection_if -> . IF LPAREN expression_comparison RPAREN THEN instance ELSE instance
    (51) selection_if -> . IF LPAREN expression_comparison RPAREN THEN BEGIN instance END SEMICOLON ELSE BEGIN instance END SEMICOLON
    (52) selection_if -> . IF LPAREN expression_comparison RPAREN THEN instance ELSE BEGIN instance END SEMICOLON
    (53) read_statement -> . READ LPAREN expression RPAREN SEMICOLON
    (54) read_statement -> . READLN LPAREN expression RPAREN SEMICOLON
    (55) write_statement -> . WRITE LPAREN type_out RPAREN SEMICOLON
    (56) write_statement -> . WRITELN LPAREN type_out RPAREN SEMICOLON

    BEGIN           shift and go to state 153
    ID              shift and go to state 30
    FOR             shift and go to state 31
    WHILE           shift and go to state 32
    IF              shift and go to state 33
    READ            shift and go to state 34
    READLN          shift and go to state 35
    WRITE           shift and go to state 36
    WRITELN         shift and go to state 37

    instance                       shift and go to state 154
    group_instance                 shift and go to state 22
    declaration_id                 shift and go to state 23
    asignation                     shift and go to state 24
    iteration_for                  shift and go to state 25
    iteration_while                shift and go to state 26
    selection_if                   shift and go to state 27
    read_statement                 shift and go to state 28
    write_statement                shift and go to state 29

state 152

    (52) selection_if -> IF LPAREN expression_comparison RPAREN THEN instance ELSE BEGIN instance END . SEMICOLON

    SEMICOLON       shift and go to state 155


state 153

    (51) selection_if -> IF LPAREN expression_comparison RPAREN THEN BEGIN instance END SEMICOLON ELSE BEGIN . instance END SEMICOLON
    (23) instance -> . group_instance instance
    (24) instance -> . group_instance
    (25) group_instance -> . declaration_id SEMICOLON
    (26) group_instance -> . asignation SEMICOLON
    (27) group_instance -> . iteration_for
    (28) group_instance -> . iteration_while
    (29) group_instance -> . selection_if
    (30) group_instance -> . read_statement
    (31) group_instance -> . write_statement
    (14) declaration_id -> . ID COMMA declaration_id
    (15) declaration_id -> . ID
    (32) asignation -> . ID ASSIGNATION expression
    (37) iteration_for -> . FOR expression TO expression DO BEGIN instance END SEMICOLON
    (38) iteration_for -> . FOR asignation TO expression DO BEGIN instance END SEMICOLON
    (39) iteration_while -> . WHILE LPAREN expression_comparison RPAREN DO BEGIN instance END SEMICOLON
    (47) selection_if -> . IF LPAREN expression_comparison RPAREN THEN BEGIN instance END SEMICOLON
    (48) selection_if -> . IF LPAREN expression_comparison RPAREN THEN instance
    (49) selection_if -> . IF LPAREN expression_comparison RPAREN THEN BEGIN instance END SEMICOLON ELSE instance
    (50) selection_if -> . IF LPAREN expression_comparison RPAREN THEN instance ELSE instance
    (51) selection_if -> . IF LPAREN expression_comparison RPAREN THEN BEGIN instance END SEMICOLON ELSE BEGIN instance END SEMICOLON
    (52) selection_if -> . IF LPAREN expression_comparison RPAREN THEN instance ELSE BEGIN instance END SEMICOLON
    (53) read_statement -> . READ LPAREN expression RPAREN SEMICOLON
    (54) read_statement -> . READLN LPAREN expression RPAREN SEMICOLON
    (55) write_statement -> . WRITE LPAREN type_out RPAREN SEMICOLON
    (56) write_statement -> . WRITELN LPAREN type_out RPAREN SEMICOLON

    ID              shift and go to state 30
    FOR             shift and go to state 31
    WHILE           shift and go to state 32
    IF              shift and go to state 33
    READ            shift and go to state 34
    READLN          shift and go to state 35
    WRITE           shift and go to state 36
    WRITELN         shift and go to state 37

    instance                       shift and go to state 156
    group_instance                 shift and go to state 22
    declaration_id                 shift and go to state 23
    asignation                     shift and go to state 24
    iteration_for                  shift and go to state 25
    iteration_while                shift and go to state 26
    selection_if                   shift and go to state 27
    read_statement                 shift and go to state 28
    write_statement                shift and go to state 29

state 154

    (49) selection_if -> IF LPAREN expression_comparison RPAREN THEN BEGIN instance END SEMICOLON ELSE instance .

    ID              reduce using rule 49 (selection_if -> IF LPAREN expression_comparison RPAREN THEN BEGIN instance END SEMICOLON ELSE instance .)
    FOR             reduce using rule 49 (selection_if -> IF LPAREN expression_comparison RPAREN THEN BEGIN instance END SEMICOLON ELSE instance .)
    WHILE           reduce using rule 49 (selection_if -> IF LPAREN expression_comparison RPAREN THEN BEGIN instance END SEMICOLON ELSE instance .)
    IF              reduce using rule 49 (selection_if -> IF LPAREN expression_comparison RPAREN THEN BEGIN instance END SEMICOLON ELSE instance .)
    READ            reduce using rule 49 (selection_if -> IF LPAREN expression_comparison RPAREN THEN BEGIN instance END SEMICOLON ELSE instance .)
    READLN          reduce using rule 49 (selection_if -> IF LPAREN expression_comparison RPAREN THEN BEGIN instance END SEMICOLON ELSE instance .)
    WRITE           reduce using rule 49 (selection_if -> IF LPAREN expression_comparison RPAREN THEN BEGIN instance END SEMICOLON ELSE instance .)
    WRITELN         reduce using rule 49 (selection_if -> IF LPAREN expression_comparison RPAREN THEN BEGIN instance END SEMICOLON ELSE instance .)
    END             reduce using rule 49 (selection_if -> IF LPAREN expression_comparison RPAREN THEN BEGIN instance END SEMICOLON ELSE instance .)
    ELSE            reduce using rule 49 (selection_if -> IF LPAREN expression_comparison RPAREN THEN BEGIN instance END SEMICOLON ELSE instance .)


state 155

    (52) selection_if -> IF LPAREN expression_comparison RPAREN THEN instance ELSE BEGIN instance END SEMICOLON .

    ID              reduce using rule 52 (selection_if -> IF LPAREN expression_comparison RPAREN THEN instance ELSE BEGIN instance END SEMICOLON .)
    FOR             reduce using rule 52 (selection_if -> IF LPAREN expression_comparison RPAREN THEN instance ELSE BEGIN instance END SEMICOLON .)
    WHILE           reduce using rule 52 (selection_if -> IF LPAREN expression_comparison RPAREN THEN instance ELSE BEGIN instance END SEMICOLON .)
    IF              reduce using rule 52 (selection_if -> IF LPAREN expression_comparison RPAREN THEN instance ELSE BEGIN instance END SEMICOLON .)
    READ            reduce using rule 52 (selection_if -> IF LPAREN expression_comparison RPAREN THEN instance ELSE BEGIN instance END SEMICOLON .)
    READLN          reduce using rule 52 (selection_if -> IF LPAREN expression_comparison RPAREN THEN instance ELSE BEGIN instance END SEMICOLON .)
    WRITE           reduce using rule 52 (selection_if -> IF LPAREN expression_comparison RPAREN THEN instance ELSE BEGIN instance END SEMICOLON .)
    WRITELN         reduce using rule 52 (selection_if -> IF LPAREN expression_comparison RPAREN THEN instance ELSE BEGIN instance END SEMICOLON .)
    END             reduce using rule 52 (selection_if -> IF LPAREN expression_comparison RPAREN THEN instance ELSE BEGIN instance END SEMICOLON .)
    ELSE            reduce using rule 52 (selection_if -> IF LPAREN expression_comparison RPAREN THEN instance ELSE BEGIN instance END SEMICOLON .)


state 156

    (51) selection_if -> IF LPAREN expression_comparison RPAREN THEN BEGIN instance END SEMICOLON ELSE BEGIN instance . END SEMICOLON

    END             shift and go to state 157


state 157

    (51) selection_if -> IF LPAREN expression_comparison RPAREN THEN BEGIN instance END SEMICOLON ELSE BEGIN instance END . SEMICOLON

    SEMICOLON       shift and go to state 158


state 158

    (51) selection_if -> IF LPAREN expression_comparison RPAREN THEN BEGIN instance END SEMICOLON ELSE BEGIN instance END SEMICOLON .

    ID              reduce using rule 51 (selection_if -> IF LPAREN expression_comparison RPAREN THEN BEGIN instance END SEMICOLON ELSE BEGIN instance END SEMICOLON .)
    FOR             reduce using rule 51 (selection_if -> IF LPAREN expression_comparison RPAREN THEN BEGIN instance END SEMICOLON ELSE BEGIN instance END SEMICOLON .)
    WHILE           reduce using rule 51 (selection_if -> IF LPAREN expression_comparison RPAREN THEN BEGIN instance END SEMICOLON ELSE BEGIN instance END SEMICOLON .)
    IF              reduce using rule 51 (selection_if -> IF LPAREN expression_comparison RPAREN THEN BEGIN instance END SEMICOLON ELSE BEGIN instance END SEMICOLON .)
    READ            reduce using rule 51 (selection_if -> IF LPAREN expression_comparison RPAREN THEN BEGIN instance END SEMICOLON ELSE BEGIN instance END SEMICOLON .)
    READLN          reduce using rule 51 (selection_if -> IF LPAREN expression_comparison RPAREN THEN BEGIN instance END SEMICOLON ELSE BEGIN instance END SEMICOLON .)
    WRITE           reduce using rule 51 (selection_if -> IF LPAREN expression_comparison RPAREN THEN BEGIN instance END SEMICOLON ELSE BEGIN instance END SEMICOLON .)
    WRITELN         reduce using rule 51 (selection_if -> IF LPAREN expression_comparison RPAREN THEN BEGIN instance END SEMICOLON ELSE BEGIN instance END SEMICOLON .)
    END             reduce using rule 51 (selection_if -> IF LPAREN expression_comparison RPAREN THEN BEGIN instance END SEMICOLON ELSE BEGIN instance END SEMICOLON .)
    ELSE            reduce using rule 51 (selection_if -> IF LPAREN expression_comparison RPAREN THEN BEGIN instance END SEMICOLON ELSE BEGIN instance END SEMICOLON .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ID in state 22 resolved as shift
WARNING: shift/reduce conflict for FOR in state 22 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 22 resolved as shift
WARNING: shift/reduce conflict for IF in state 22 resolved as shift
WARNING: shift/reduce conflict for READ in state 22 resolved as shift
WARNING: shift/reduce conflict for READLN in state 22 resolved as shift
WARNING: shift/reduce conflict for WRITE in state 22 resolved as shift
WARNING: shift/reduce conflict for WRITELN in state 22 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 127 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 148 resolved as shift
